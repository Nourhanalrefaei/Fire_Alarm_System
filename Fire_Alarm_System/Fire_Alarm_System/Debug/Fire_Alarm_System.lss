
Fire_Alarm_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000014f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  000014f2  00001586  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080009c  0080009c  000015c2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000015c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001620  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  0000165c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000326a  00000000  00000000  000018d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000100a  00000000  00000000  00004b3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001663  00000000  00000000  00005b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000588  00000000  00000000  000071ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b7e  00000000  00000000  00007734  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002074  00000000  00000000  000082b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000a326  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 83 04 	jmp	0x906	; 0x906 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ef       	ldi	r30, 0xF2	; 242
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 39       	cpi	r26, 0x9C	; 156
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac e9       	ldi	r26, 0x9C	; 156
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 3a       	cpi	r26, 0xA9	; 169
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 04 	call	0x892	; 0x892 <main>
      8a:	0c 94 77 0a 	jmp	0x14ee	; 0x14ee <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Buzz_INIT>:

#include "BUZZ.h"

void Buzz_INIT(void)
{
	gpio_pin_direction_initialize(BUZZ_PORT,BUZZ_PIN,DIRECTION_OUTPUT);
      92:	41 e0       	ldi	r20, 0x01	; 1
      94:	63 e0       	ldi	r22, 0x03	; 3
      96:	80 e0       	ldi	r24, 0x00	; 0
      98:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
      9c:	08 95       	ret

0000009e <Buzz_ON>:
}

void Buzz_ON(void)
{
	gpio_set_pin(BUZZ_PORT,BUZZ_PIN);
      9e:	63 e0       	ldi	r22, 0x03	; 3
      a0:	80 e0       	ldi	r24, 0x00	; 0
      a2:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <gpio_set_pin>
      a6:	08 95       	ret

000000a8 <Buzz_OFF>:
}

void Buzz_OFF(void)
{
	gpio_clear_pin(BUZZ_PORT,BUZZ_PIN);
      a8:	63 e0       	ldi	r22, 0x03	; 3
      aa:	80 e0       	ldi	r24, 0x00	; 0
      ac:	0e 94 07 05 	call	0xa0e	; 0xa0e <gpio_clear_pin>
      b0:	08 95       	ret

000000b2 <lcd_send_4bits>:
	}
	else{
		return ret;
	}
	return ret;
}
      b2:	1f 93       	push	r17
      b4:	cf 93       	push	r28
      b6:	df 93       	push	r29
      b8:	00 97       	sbiw	r24, 0x00	; 0
      ba:	a1 f1       	breq	.+104    	; 0x124 <lcd_send_4bits+0x72>
      bc:	16 2f       	mov	r17, r22
      be:	ec 01       	movw	r28, r24
      c0:	6a 81       	ldd	r22, Y+2	; 0x02
      c2:	67 70       	andi	r22, 0x07	; 7
      c4:	88 81       	ld	r24, Y
      c6:	41 2f       	mov	r20, r17
      c8:	41 70       	andi	r20, 0x01	; 1
      ca:	8f 70       	andi	r24, 0x0F	; 15
      cc:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
      d0:	6a 81       	ldd	r22, Y+2	; 0x02
      d2:	66 95       	lsr	r22
      d4:	66 95       	lsr	r22
      d6:	66 95       	lsr	r22
      d8:	67 70       	andi	r22, 0x07	; 7
      da:	88 81       	ld	r24, Y
      dc:	11 fb       	bst	r17, 1
      de:	44 27       	eor	r20, r20
      e0:	40 f9       	bld	r20, 0
      e2:	8f 70       	andi	r24, 0x0F	; 15
      e4:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
      e8:	6a 81       	ldd	r22, Y+2	; 0x02
      ea:	86 2f       	mov	r24, r22
      ec:	82 95       	swap	r24
      ee:	86 95       	lsr	r24
      f0:	86 95       	lsr	r24
      f2:	83 70       	andi	r24, 0x03	; 3
      f4:	6b 81       	ldd	r22, Y+3	; 0x03
      f6:	61 70       	andi	r22, 0x01	; 1
      f8:	66 0f       	add	r22, r22
      fa:	66 0f       	add	r22, r22
      fc:	68 2b       	or	r22, r24
      fe:	88 81       	ld	r24, Y
     100:	12 fb       	bst	r17, 2
     102:	44 27       	eor	r20, r20
     104:	40 f9       	bld	r20, 0
     106:	8f 70       	andi	r24, 0x0F	; 15
     108:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     10c:	6b 81       	ldd	r22, Y+3	; 0x03
     10e:	66 95       	lsr	r22
     110:	67 70       	andi	r22, 0x07	; 7
     112:	88 81       	ld	r24, Y
     114:	13 fb       	bst	r17, 3
     116:	44 27       	eor	r20, r20
     118:	40 f9       	bld	r20, 0
     11a:	8f 70       	andi	r24, 0x0F	; 15
     11c:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     120:	81 e0       	ldi	r24, 0x01	; 1
     122:	01 c0       	rjmp	.+2      	; 0x126 <lcd_send_4bits+0x74>
     124:	80 e0       	ldi	r24, 0x00	; 0
     126:	df 91       	pop	r29
     128:	cf 91       	pop	r28
     12a:	1f 91       	pop	r17
     12c:	08 95       	ret

0000012e <lcd_send_enable>:
     12e:	cf 93       	push	r28
     130:	df 93       	push	r29
     132:	00 97       	sbiw	r24, 0x00	; 0
     134:	e9 f0       	breq	.+58     	; 0x170 <lcd_send_enable+0x42>
     136:	ec 01       	movw	r28, r24
     138:	6b 81       	ldd	r22, Y+3	; 0x03
     13a:	62 95       	swap	r22
     13c:	6f 70       	andi	r22, 0x0F	; 15
     13e:	67 70       	andi	r22, 0x07	; 7
     140:	88 81       	ld	r24, Y
     142:	41 e0       	ldi	r20, 0x01	; 1
     144:	82 95       	swap	r24
     146:	8f 70       	andi	r24, 0x0F	; 15
     148:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     14c:	8f e4       	ldi	r24, 0x4F	; 79
     14e:	93 ec       	ldi	r25, 0xC3	; 195
     150:	01 97       	sbiw	r24, 0x01	; 1
     152:	f1 f7       	brne	.-4      	; 0x150 <lcd_send_enable+0x22>
     154:	00 c0       	rjmp	.+0      	; 0x156 <lcd_send_enable+0x28>
     156:	00 00       	nop
     158:	6b 81       	ldd	r22, Y+3	; 0x03
     15a:	62 95       	swap	r22
     15c:	6f 70       	andi	r22, 0x0F	; 15
     15e:	67 70       	andi	r22, 0x07	; 7
     160:	88 81       	ld	r24, Y
     162:	40 e0       	ldi	r20, 0x00	; 0
     164:	82 95       	swap	r24
     166:	8f 70       	andi	r24, 0x0F	; 15
     168:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     16c:	81 e0       	ldi	r24, 0x01	; 1
     16e:	01 c0       	rjmp	.+2      	; 0x172 <lcd_send_enable+0x44>
     170:	80 e0       	ldi	r24, 0x00	; 0
     172:	df 91       	pop	r29
     174:	cf 91       	pop	r28
     176:	08 95       	ret

00000178 <lcd_send_command>:
     178:	1f 93       	push	r17
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	00 97       	sbiw	r24, 0x00	; 0
     180:	49 f1       	breq	.+82     	; 0x1d4 <lcd_send_command+0x5c>
     182:	16 2f       	mov	r17, r22
     184:	ec 01       	movw	r28, r24
     186:	6b 81       	ldd	r22, Y+3	; 0x03
     188:	86 2f       	mov	r24, r22
     18a:	88 1f       	adc	r24, r24
     18c:	88 27       	eor	r24, r24
     18e:	88 1f       	adc	r24, r24
     190:	6c 81       	ldd	r22, Y+4	; 0x04
     192:	63 70       	andi	r22, 0x03	; 3
     194:	66 0f       	add	r22, r22
     196:	68 2b       	or	r22, r24
     198:	89 81       	ldd	r24, Y+1	; 0x01
     19a:	40 e0       	ldi	r20, 0x00	; 0
     19c:	8f 70       	andi	r24, 0x0F	; 15
     19e:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     1a2:	61 2f       	mov	r22, r17
     1a4:	62 95       	swap	r22
     1a6:	6f 70       	andi	r22, 0x0F	; 15
     1a8:	ce 01       	movw	r24, r28
     1aa:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_send_4bits>
     1ae:	ce 01       	movw	r24, r28
     1b0:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     1b4:	61 2f       	mov	r22, r17
     1b6:	6f 70       	andi	r22, 0x0F	; 15
     1b8:	ce 01       	movw	r24, r28
     1ba:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_send_4bits>
     1be:	ce 01       	movw	r24, r28
     1c0:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     1c4:	83 ef       	ldi	r24, 0xF3	; 243
     1c6:	91 e0       	ldi	r25, 0x01	; 1
     1c8:	01 97       	sbiw	r24, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <lcd_send_command+0x50>
     1cc:	00 c0       	rjmp	.+0      	; 0x1ce <lcd_send_command+0x56>
     1ce:	00 00       	nop
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	01 c0       	rjmp	.+2      	; 0x1d6 <lcd_send_command+0x5e>
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	1f 91       	pop	r17
     1dc:	08 95       	ret

000001de <lcd_4bit_lcd_initialize>:
     1de:	cf 93       	push	r28
     1e0:	df 93       	push	r29
     1e2:	ec 01       	movw	r28, r24
     1e4:	6b 81       	ldd	r22, Y+3	; 0x03
     1e6:	62 95       	swap	r22
     1e8:	6f 70       	andi	r22, 0x0F	; 15
     1ea:	67 70       	andi	r22, 0x07	; 7
     1ec:	88 81       	ld	r24, Y
     1ee:	41 e0       	ldi	r20, 0x01	; 1
     1f0:	82 95       	swap	r24
     1f2:	8f 70       	andi	r24, 0x0F	; 15
     1f4:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     1f8:	6b 81       	ldd	r22, Y+3	; 0x03
     1fa:	86 2f       	mov	r24, r22
     1fc:	88 1f       	adc	r24, r24
     1fe:	88 27       	eor	r24, r24
     200:	88 1f       	adc	r24, r24
     202:	6c 81       	ldd	r22, Y+4	; 0x04
     204:	63 70       	andi	r22, 0x03	; 3
     206:	66 0f       	add	r22, r22
     208:	68 2b       	or	r22, r24
     20a:	89 81       	ldd	r24, Y+1	; 0x01
     20c:	41 e0       	ldi	r20, 0x01	; 1
     20e:	8f 70       	andi	r24, 0x0F	; 15
     210:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     214:	6c 81       	ldd	r22, Y+4	; 0x04
     216:	66 95       	lsr	r22
     218:	66 95       	lsr	r22
     21a:	67 70       	andi	r22, 0x07	; 7
     21c:	89 81       	ldd	r24, Y+1	; 0x01
     21e:	41 e0       	ldi	r20, 0x01	; 1
     220:	82 95       	swap	r24
     222:	8f 70       	andi	r24, 0x0F	; 15
     224:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     228:	6a 81       	ldd	r22, Y+2	; 0x02
     22a:	67 70       	andi	r22, 0x07	; 7
     22c:	88 81       	ld	r24, Y
     22e:	41 e0       	ldi	r20, 0x01	; 1
     230:	8f 70       	andi	r24, 0x0F	; 15
     232:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     236:	6a 81       	ldd	r22, Y+2	; 0x02
     238:	66 95       	lsr	r22
     23a:	66 95       	lsr	r22
     23c:	66 95       	lsr	r22
     23e:	67 70       	andi	r22, 0x07	; 7
     240:	88 81       	ld	r24, Y
     242:	41 e0       	ldi	r20, 0x01	; 1
     244:	8f 70       	andi	r24, 0x0F	; 15
     246:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     24a:	6a 81       	ldd	r22, Y+2	; 0x02
     24c:	86 2f       	mov	r24, r22
     24e:	82 95       	swap	r24
     250:	86 95       	lsr	r24
     252:	86 95       	lsr	r24
     254:	83 70       	andi	r24, 0x03	; 3
     256:	6b 81       	ldd	r22, Y+3	; 0x03
     258:	61 70       	andi	r22, 0x01	; 1
     25a:	66 0f       	add	r22, r22
     25c:	66 0f       	add	r22, r22
     25e:	68 2b       	or	r22, r24
     260:	88 81       	ld	r24, Y
     262:	41 e0       	ldi	r20, 0x01	; 1
     264:	8f 70       	andi	r24, 0x0F	; 15
     266:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     26a:	6b 81       	ldd	r22, Y+3	; 0x03
     26c:	66 95       	lsr	r22
     26e:	67 70       	andi	r22, 0x07	; 7
     270:	88 81       	ld	r24, Y
     272:	41 e0       	ldi	r20, 0x01	; 1
     274:	8f 70       	andi	r24, 0x0F	; 15
     276:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     27a:	8f e0       	ldi	r24, 0x0F	; 15
     27c:	97 e2       	ldi	r25, 0x27	; 39
     27e:	01 97       	sbiw	r24, 0x01	; 1
     280:	f1 f7       	brne	.-4      	; 0x27e <lcd_4bit_lcd_initialize+0xa0>
     282:	00 c0       	rjmp	.+0      	; 0x284 <lcd_4bit_lcd_initialize+0xa6>
     284:	00 00       	nop
     286:	6b 81       	ldd	r22, Y+3	; 0x03
     288:	62 95       	swap	r22
     28a:	6f 70       	andi	r22, 0x0F	; 15
     28c:	67 70       	andi	r22, 0x07	; 7
     28e:	88 81       	ld	r24, Y
     290:	40 e0       	ldi	r20, 0x00	; 0
     292:	82 95       	swap	r24
     294:	8f 70       	andi	r24, 0x0F	; 15
     296:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     29a:	6b 81       	ldd	r22, Y+3	; 0x03
     29c:	86 2f       	mov	r24, r22
     29e:	88 1f       	adc	r24, r24
     2a0:	88 27       	eor	r24, r24
     2a2:	88 1f       	adc	r24, r24
     2a4:	6c 81       	ldd	r22, Y+4	; 0x04
     2a6:	63 70       	andi	r22, 0x03	; 3
     2a8:	66 0f       	add	r22, r22
     2aa:	68 2b       	or	r22, r24
     2ac:	89 81       	ldd	r24, Y+1	; 0x01
     2ae:	40 e0       	ldi	r20, 0x00	; 0
     2b0:	8f 70       	andi	r24, 0x0F	; 15
     2b2:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     2b6:	6c 81       	ldd	r22, Y+4	; 0x04
     2b8:	66 95       	lsr	r22
     2ba:	66 95       	lsr	r22
     2bc:	67 70       	andi	r22, 0x07	; 7
     2be:	89 81       	ldd	r24, Y+1	; 0x01
     2c0:	40 e0       	ldi	r20, 0x00	; 0
     2c2:	82 95       	swap	r24
     2c4:	8f 70       	andi	r24, 0x0F	; 15
     2c6:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     2ca:	6a 81       	ldd	r22, Y+2	; 0x02
     2cc:	67 70       	andi	r22, 0x07	; 7
     2ce:	88 81       	ld	r24, Y
     2d0:	41 e0       	ldi	r20, 0x01	; 1
     2d2:	8f 70       	andi	r24, 0x0F	; 15
     2d4:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     2d8:	6a 81       	ldd	r22, Y+2	; 0x02
     2da:	66 95       	lsr	r22
     2dc:	66 95       	lsr	r22
     2de:	66 95       	lsr	r22
     2e0:	67 70       	andi	r22, 0x07	; 7
     2e2:	88 81       	ld	r24, Y
     2e4:	41 e0       	ldi	r20, 0x01	; 1
     2e6:	8f 70       	andi	r24, 0x0F	; 15
     2e8:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     2ec:	6a 81       	ldd	r22, Y+2	; 0x02
     2ee:	86 2f       	mov	r24, r22
     2f0:	82 95       	swap	r24
     2f2:	86 95       	lsr	r24
     2f4:	86 95       	lsr	r24
     2f6:	83 70       	andi	r24, 0x03	; 3
     2f8:	6b 81       	ldd	r22, Y+3	; 0x03
     2fa:	61 70       	andi	r22, 0x01	; 1
     2fc:	66 0f       	add	r22, r22
     2fe:	66 0f       	add	r22, r22
     300:	68 2b       	or	r22, r24
     302:	88 81       	ld	r24, Y
     304:	40 e0       	ldi	r20, 0x00	; 0
     306:	8f 70       	andi	r24, 0x0F	; 15
     308:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     30c:	6b 81       	ldd	r22, Y+3	; 0x03
     30e:	66 95       	lsr	r22
     310:	67 70       	andi	r22, 0x07	; 7
     312:	88 81       	ld	r24, Y
     314:	40 e0       	ldi	r20, 0x00	; 0
     316:	8f 70       	andi	r24, 0x0F	; 15
     318:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     31c:	ce 01       	movw	r24, r28
     31e:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     322:	81 ee       	ldi	r24, 0xE1	; 225
     324:	94 e0       	ldi	r25, 0x04	; 4
     326:	01 97       	sbiw	r24, 0x01	; 1
     328:	f1 f7       	brne	.-4      	; 0x326 <lcd_4bit_lcd_initialize+0x148>
     32a:	00 c0       	rjmp	.+0      	; 0x32c <lcd_4bit_lcd_initialize+0x14e>
     32c:	00 00       	nop
     32e:	6b 81       	ldd	r22, Y+3	; 0x03
     330:	62 95       	swap	r22
     332:	6f 70       	andi	r22, 0x0F	; 15
     334:	67 70       	andi	r22, 0x07	; 7
     336:	88 81       	ld	r24, Y
     338:	40 e0       	ldi	r20, 0x00	; 0
     33a:	82 95       	swap	r24
     33c:	8f 70       	andi	r24, 0x0F	; 15
     33e:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     342:	6b 81       	ldd	r22, Y+3	; 0x03
     344:	86 2f       	mov	r24, r22
     346:	88 1f       	adc	r24, r24
     348:	88 27       	eor	r24, r24
     34a:	88 1f       	adc	r24, r24
     34c:	6c 81       	ldd	r22, Y+4	; 0x04
     34e:	63 70       	andi	r22, 0x03	; 3
     350:	66 0f       	add	r22, r22
     352:	68 2b       	or	r22, r24
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	40 e0       	ldi	r20, 0x00	; 0
     358:	8f 70       	andi	r24, 0x0F	; 15
     35a:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     35e:	6c 81       	ldd	r22, Y+4	; 0x04
     360:	66 95       	lsr	r22
     362:	66 95       	lsr	r22
     364:	67 70       	andi	r22, 0x07	; 7
     366:	89 81       	ldd	r24, Y+1	; 0x01
     368:	40 e0       	ldi	r20, 0x00	; 0
     36a:	82 95       	swap	r24
     36c:	8f 70       	andi	r24, 0x0F	; 15
     36e:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     372:	6a 81       	ldd	r22, Y+2	; 0x02
     374:	67 70       	andi	r22, 0x07	; 7
     376:	88 81       	ld	r24, Y
     378:	41 e0       	ldi	r20, 0x01	; 1
     37a:	8f 70       	andi	r24, 0x0F	; 15
     37c:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     380:	6a 81       	ldd	r22, Y+2	; 0x02
     382:	66 95       	lsr	r22
     384:	66 95       	lsr	r22
     386:	66 95       	lsr	r22
     388:	67 70       	andi	r22, 0x07	; 7
     38a:	88 81       	ld	r24, Y
     38c:	41 e0       	ldi	r20, 0x01	; 1
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     394:	6a 81       	ldd	r22, Y+2	; 0x02
     396:	86 2f       	mov	r24, r22
     398:	82 95       	swap	r24
     39a:	86 95       	lsr	r24
     39c:	86 95       	lsr	r24
     39e:	83 70       	andi	r24, 0x03	; 3
     3a0:	6b 81       	ldd	r22, Y+3	; 0x03
     3a2:	61 70       	andi	r22, 0x01	; 1
     3a4:	66 0f       	add	r22, r22
     3a6:	66 0f       	add	r22, r22
     3a8:	68 2b       	or	r22, r24
     3aa:	88 81       	ld	r24, Y
     3ac:	40 e0       	ldi	r20, 0x00	; 0
     3ae:	8f 70       	andi	r24, 0x0F	; 15
     3b0:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     3b4:	6b 81       	ldd	r22, Y+3	; 0x03
     3b6:	66 95       	lsr	r22
     3b8:	67 70       	andi	r22, 0x07	; 7
     3ba:	88 81       	ld	r24, Y
     3bc:	40 e0       	ldi	r20, 0x00	; 0
     3be:	8f 70       	andi	r24, 0x0F	; 15
     3c0:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     3c4:	ce 01       	movw	r24, r28
     3c6:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     3ca:	92 e3       	ldi	r25, 0x32	; 50
     3cc:	9a 95       	dec	r25
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <lcd_4bit_lcd_initialize+0x1ee>
     3d0:	6b 81       	ldd	r22, Y+3	; 0x03
     3d2:	62 95       	swap	r22
     3d4:	6f 70       	andi	r22, 0x0F	; 15
     3d6:	67 70       	andi	r22, 0x07	; 7
     3d8:	88 81       	ld	r24, Y
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	82 95       	swap	r24
     3de:	8f 70       	andi	r24, 0x0F	; 15
     3e0:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     3e4:	6b 81       	ldd	r22, Y+3	; 0x03
     3e6:	86 2f       	mov	r24, r22
     3e8:	88 1f       	adc	r24, r24
     3ea:	88 27       	eor	r24, r24
     3ec:	88 1f       	adc	r24, r24
     3ee:	6c 81       	ldd	r22, Y+4	; 0x04
     3f0:	63 70       	andi	r22, 0x03	; 3
     3f2:	66 0f       	add	r22, r22
     3f4:	68 2b       	or	r22, r24
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	40 e0       	ldi	r20, 0x00	; 0
     3fa:	8f 70       	andi	r24, 0x0F	; 15
     3fc:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     400:	6c 81       	ldd	r22, Y+4	; 0x04
     402:	66 95       	lsr	r22
     404:	66 95       	lsr	r22
     406:	67 70       	andi	r22, 0x07	; 7
     408:	89 81       	ldd	r24, Y+1	; 0x01
     40a:	40 e0       	ldi	r20, 0x00	; 0
     40c:	82 95       	swap	r24
     40e:	8f 70       	andi	r24, 0x0F	; 15
     410:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     414:	6a 81       	ldd	r22, Y+2	; 0x02
     416:	67 70       	andi	r22, 0x07	; 7
     418:	88 81       	ld	r24, Y
     41a:	41 e0       	ldi	r20, 0x01	; 1
     41c:	8f 70       	andi	r24, 0x0F	; 15
     41e:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     422:	6a 81       	ldd	r22, Y+2	; 0x02
     424:	66 95       	lsr	r22
     426:	66 95       	lsr	r22
     428:	66 95       	lsr	r22
     42a:	67 70       	andi	r22, 0x07	; 7
     42c:	88 81       	ld	r24, Y
     42e:	41 e0       	ldi	r20, 0x01	; 1
     430:	8f 70       	andi	r24, 0x0F	; 15
     432:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     436:	6a 81       	ldd	r22, Y+2	; 0x02
     438:	86 2f       	mov	r24, r22
     43a:	82 95       	swap	r24
     43c:	86 95       	lsr	r24
     43e:	86 95       	lsr	r24
     440:	83 70       	andi	r24, 0x03	; 3
     442:	6b 81       	ldd	r22, Y+3	; 0x03
     444:	61 70       	andi	r22, 0x01	; 1
     446:	66 0f       	add	r22, r22
     448:	66 0f       	add	r22, r22
     44a:	68 2b       	or	r22, r24
     44c:	88 81       	ld	r24, Y
     44e:	40 e0       	ldi	r20, 0x00	; 0
     450:	8f 70       	andi	r24, 0x0F	; 15
     452:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     456:	6b 81       	ldd	r22, Y+3	; 0x03
     458:	66 95       	lsr	r22
     45a:	67 70       	andi	r22, 0x07	; 7
     45c:	88 81       	ld	r24, Y
     45e:	40 e0       	ldi	r20, 0x00	; 0
     460:	8f 70       	andi	r24, 0x0F	; 15
     462:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     466:	ce 01       	movw	r24, r28
     468:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     46c:	61 e0       	ldi	r22, 0x01	; 1
     46e:	ce 01       	movw	r24, r28
     470:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     474:	89 ef       	ldi	r24, 0xF9	; 249
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <__EEPROM_REGION_LENGTH__+0x78>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
     47e:	00 00       	nop
     480:	62 e0       	ldi	r22, 0x02	; 2
     482:	ce 01       	movw	r24, r28
     484:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     488:	89 ef       	ldi	r24, 0xF9	; 249
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	01 97       	sbiw	r24, 0x01	; 1
     48e:	f1 f7       	brne	.-4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
     490:	00 c0       	rjmp	.+0      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     492:	00 00       	nop
     494:	66 e0       	ldi	r22, 0x06	; 6
     496:	ce 01       	movw	r24, r28
     498:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     49c:	89 ef       	ldi	r24, 0xF9	; 249
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	01 97       	sbiw	r24, 0x01	; 1
     4a2:	f1 f7       	brne	.-4      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
     4a6:	00 00       	nop
     4a8:	6c e0       	ldi	r22, 0x0C	; 12
     4aa:	ce 01       	movw	r24, r28
     4ac:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     4b0:	89 ef       	ldi	r24, 0xF9	; 249
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	01 97       	sbiw	r24, 0x01	; 1
     4b6:	f1 f7       	brne	.-4      	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
     4b8:	00 c0       	rjmp	.+0      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4ba:	00 00       	nop
     4bc:	6c e1       	ldi	r22, 0x1C	; 28
     4be:	ce 01       	movw	r24, r28
     4c0:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     4c4:	89 ef       	ldi	r24, 0xF9	; 249
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4cc:	00 c0       	rjmp	.+0      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     4ce:	00 00       	nop
     4d0:	68 e2       	ldi	r22, 0x28	; 40
     4d2:	ce 01       	movw	r24, r28
     4d4:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     4d8:	89 ef       	ldi	r24, 0xF9	; 249
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	f1 f7       	brne	.-4      	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
     4e0:	00 c0       	rjmp	.+0      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4e2:	00 00       	nop
     4e4:	60 e8       	ldi	r22, 0x80	; 128
     4e6:	ce 01       	movw	r24, r28
     4e8:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     4ec:	89 ef       	ldi	r24, 0xF9	; 249
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	01 97       	sbiw	r24, 0x01	; 1
     4f2:	f1 f7       	brne	.-4      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
     4f4:	00 c0       	rjmp	.+0      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
     4f6:	00 00       	nop
     4f8:	df 91       	pop	r29
     4fa:	cf 91       	pop	r28
     4fc:	08 95       	ret

000004fe <lcd_initialize>:
     4fe:	00 97       	sbiw	r24, 0x00	; 0
     500:	21 f0       	breq	.+8      	; 0x50a <lcd_initialize+0xc>
     502:	0e 94 ef 00 	call	0x1de	; 0x1de <lcd_4bit_lcd_initialize>
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	08 95       	ret
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	08 95       	ret

0000050e <lcd_set_cursor>:
     50e:	62 30       	cpi	r22, 0x02	; 2
     510:	71 f0       	breq	.+28     	; 0x52e <lcd_set_cursor+0x20>
     512:	18 f4       	brcc	.+6      	; 0x51a <lcd_set_cursor+0xc>
     514:	61 30       	cpi	r22, 0x01	; 1
     516:	31 f0       	breq	.+12     	; 0x524 <lcd_set_cursor+0x16>
     518:	08 95       	ret
     51a:	63 30       	cpi	r22, 0x03	; 3
     51c:	69 f0       	breq	.+26     	; 0x538 <lcd_set_cursor+0x2a>
     51e:	64 30       	cpi	r22, 0x04	; 4
     520:	81 f0       	breq	.+32     	; 0x542 <lcd_set_cursor+0x34>
     522:	08 95       	ret
     524:	6f e7       	ldi	r22, 0x7F	; 127
     526:	64 0f       	add	r22, r20
     528:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     52c:	08 95       	ret
     52e:	6f eb       	ldi	r22, 0xBF	; 191
     530:	64 0f       	add	r22, r20
     532:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     536:	08 95       	ret
     538:	63 e9       	ldi	r22, 0x93	; 147
     53a:	64 0f       	add	r22, r20
     53c:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     540:	08 95       	ret
     542:	63 ed       	ldi	r22, 0xD3	; 211
     544:	64 0f       	add	r22, r20
     546:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     54a:	08 95       	ret

0000054c <lcd_send_char_data>:
     54c:	1f 93       	push	r17
     54e:	cf 93       	push	r28
     550:	df 93       	push	r29
     552:	00 97       	sbiw	r24, 0x00	; 0
     554:	19 f1       	breq	.+70     	; 0x59c <lcd_send_char_data+0x50>
     556:	16 2f       	mov	r17, r22
     558:	ec 01       	movw	r28, r24
     55a:	6b 81       	ldd	r22, Y+3	; 0x03
     55c:	86 2f       	mov	r24, r22
     55e:	88 1f       	adc	r24, r24
     560:	88 27       	eor	r24, r24
     562:	88 1f       	adc	r24, r24
     564:	6c 81       	ldd	r22, Y+4	; 0x04
     566:	63 70       	andi	r22, 0x03	; 3
     568:	66 0f       	add	r22, r22
     56a:	68 2b       	or	r22, r24
     56c:	89 81       	ldd	r24, Y+1	; 0x01
     56e:	41 e0       	ldi	r20, 0x01	; 1
     570:	8f 70       	andi	r24, 0x0F	; 15
     572:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     576:	61 2f       	mov	r22, r17
     578:	62 95       	swap	r22
     57a:	6f 70       	andi	r22, 0x0F	; 15
     57c:	ce 01       	movw	r24, r28
     57e:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_send_4bits>
     582:	ce 01       	movw	r24, r28
     584:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     588:	61 2f       	mov	r22, r17
     58a:	6f 70       	andi	r22, 0x0F	; 15
     58c:	ce 01       	movw	r24, r28
     58e:	0e 94 59 00 	call	0xb2	; 0xb2 <lcd_send_4bits>
     592:	ce 01       	movw	r24, r28
     594:	0e 94 97 00 	call	0x12e	; 0x12e <lcd_send_enable>
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	01 c0       	rjmp	.+2      	; 0x59e <lcd_send_char_data+0x52>
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	1f 91       	pop	r17
     5a4:	08 95       	ret

000005a6 <lcd_send_string_data_pos>:
     5a6:	ef 92       	push	r14
     5a8:	ff 92       	push	r15
     5aa:	0f 93       	push	r16
     5ac:	1f 93       	push	r17
     5ae:	cf 93       	push	r28
     5b0:	df 93       	push	r29
     5b2:	8c 01       	movw	r16, r24
     5b4:	f6 2e       	mov	r15, r22
     5b6:	e4 2e       	mov	r14, r20
     5b8:	e9 01       	movw	r28, r18
     5ba:	00 97       	sbiw	r24, 0x00	; 0
     5bc:	c9 f0       	breq	.+50     	; 0x5f0 <lcd_send_string_data_pos+0x4a>
     5be:	62 e0       	ldi	r22, 0x02	; 2
     5c0:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_send_command>
     5c4:	4e 2d       	mov	r20, r14
     5c6:	6f 2d       	mov	r22, r15
     5c8:	c8 01       	movw	r24, r16
     5ca:	0e 94 87 02 	call	0x50e	; 0x50e <lcd_set_cursor>
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	0b c0       	rjmp	.+22     	; 0x5e8 <lcd_send_string_data_pos+0x42>
     5d2:	21 96       	adiw	r28, 0x01	; 1
     5d4:	c8 01       	movw	r24, r16
     5d6:	0e 94 a6 02 	call	0x54c	; 0x54c <lcd_send_char_data>
     5da:	89 ef       	ldi	r24, 0xF9	; 249
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	01 97       	sbiw	r24, 0x01	; 1
     5e0:	f1 f7       	brne	.-4      	; 0x5de <lcd_send_string_data_pos+0x38>
     5e2:	00 c0       	rjmp	.+0      	; 0x5e4 <lcd_send_string_data_pos+0x3e>
     5e4:	00 00       	nop
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	68 81       	ld	r22, Y
     5ea:	61 11       	cpse	r22, r1
     5ec:	f2 cf       	rjmp	.-28     	; 0x5d2 <lcd_send_string_data_pos+0x2c>
     5ee:	01 c0       	rjmp	.+2      	; 0x5f2 <lcd_send_string_data_pos+0x4c>
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	08 95       	ret

00000600 <lcd_send_string_data_current_pos>:
     600:	0f 93       	push	r16
     602:	1f 93       	push	r17
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	8c 01       	movw	r16, r24
     60a:	eb 01       	movw	r28, r22
     60c:	89 2b       	or	r24, r25
     60e:	61 f4       	brne	.+24     	; 0x628 <lcd_send_string_data_current_pos+0x28>
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	0e c0       	rjmp	.+28     	; 0x630 <lcd_send_string_data_current_pos+0x30>
     614:	21 96       	adiw	r28, 0x01	; 1
     616:	c8 01       	movw	r24, r16
     618:	0e 94 a6 02 	call	0x54c	; 0x54c <lcd_send_char_data>
     61c:	89 ef       	ldi	r24, 0xF9	; 249
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <lcd_send_string_data_current_pos+0x20>
     624:	00 c0       	rjmp	.+0      	; 0x626 <lcd_send_string_data_current_pos+0x26>
     626:	00 00       	nop
     628:	68 81       	ld	r22, Y
     62a:	61 11       	cpse	r22, r1
     62c:	f3 cf       	rjmp	.-26     	; 0x614 <lcd_send_string_data_current_pos+0x14>
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	df 91       	pop	r29
     632:	cf 91       	pop	r28
     634:	1f 91       	pop	r17
     636:	0f 91       	pop	r16
     638:	08 95       	ret

0000063a <byte_to_string>:
void byte_to_string(uint8_type number, uint8_type *_output){
	sprintf(_output, "%i", number);
     63a:	1f 92       	push	r1
     63c:	8f 93       	push	r24
     63e:	8a e6       	ldi	r24, 0x6A	; 106
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	9f 93       	push	r25
     644:	8f 93       	push	r24
     646:	7f 93       	push	r23
     648:	6f 93       	push	r22
     64a:	0e 94 8d 07 	call	0xf1a	; 0xf1a <sprintf>
}
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
     654:	0f 90       	pop	r0
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	08 95       	ret

0000065c <led_init>:
	{
		return ret;
	}
	return ret;
	
}
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	fc 01       	movw	r30, r24
     662:	89 2b       	or	r24, r25
     664:	e9 f0       	breq	.+58     	; 0x6a0 <led_init+0x44>
     666:	80 81       	ld	r24, Z
     668:	8f 70       	andi	r24, 0x0F	; 15
     66a:	28 2f       	mov	r18, r24
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	24 30       	cpi	r18, 0x04	; 4
     670:	31 05       	cpc	r19, r1
     672:	c4 f4       	brge	.+48     	; 0x6a4 <led_init+0x48>
     674:	60 81       	ld	r22, Z
     676:	62 95       	swap	r22
     678:	6f 70       	andi	r22, 0x0F	; 15
     67a:	26 2f       	mov	r18, r22
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	28 30       	cpi	r18, 0x08	; 8
     680:	31 05       	cpc	r19, r1
     682:	94 f4       	brge	.+36     	; 0x6a8 <led_init+0x4c>
     684:	ef 01       	movw	r28, r30
     686:	41 e0       	ldi	r20, 0x01	; 1
     688:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     68c:	88 81       	ld	r24, Y
     68e:	68 2f       	mov	r22, r24
     690:	62 95       	swap	r22
     692:	6f 70       	andi	r22, 0x0F	; 15
     694:	40 e0       	ldi	r20, 0x00	; 0
     696:	8f 70       	andi	r24, 0x0F	; 15
     698:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	05 c0       	rjmp	.+10     	; 0x6aa <led_init+0x4e>
     6a0:	80 e0       	ldi	r24, 0x00	; 0
     6a2:	03 c0       	rjmp	.+6      	; 0x6aa <led_init+0x4e>
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	01 c0       	rjmp	.+2      	; 0x6aa <led_init+0x4e>
     6a8:	80 e0       	ldi	r24, 0x00	; 0
     6aa:	df 91       	pop	r29
     6ac:	cf 91       	pop	r28
     6ae:	08 95       	ret

000006b0 <led_turn_off>:
 * @return Status of the function 
 *         (R_OK) : The function done successfully
 */

ret_status led_turn_off(led_t* led)
{
     6b0:	fc 01       	movw	r30, r24
	ret_status ret=R_NOK;
	if((led !=NULL_POINTER)&&((led->port_info.port_type)<PORT_INVALID)&&((led->port_info.pin_type)<PIN_INVALID))
     6b2:	89 2b       	or	r24, r25
     6b4:	a9 f0       	breq	.+42     	; 0x6e0 <led_turn_off+0x30>
     6b6:	90 81       	ld	r25, Z
     6b8:	89 2f       	mov	r24, r25
     6ba:	8f 70       	andi	r24, 0x0F	; 15
     6bc:	28 2f       	mov	r18, r24
     6be:	30 e0       	ldi	r19, 0x00	; 0
     6c0:	24 30       	cpi	r18, 0x04	; 4
     6c2:	31 05       	cpc	r19, r1
     6c4:	7c f4       	brge	.+30     	; 0x6e4 <led_turn_off+0x34>
     6c6:	69 2f       	mov	r22, r25
     6c8:	62 95       	swap	r22
     6ca:	6f 70       	andi	r22, 0x0F	; 15
     6cc:	26 2f       	mov	r18, r22
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	28 30       	cpi	r18, 0x08	; 8
     6d2:	31 05       	cpc	r19, r1
     6d4:	4c f4       	brge	.+18     	; 0x6e8 <led_turn_off+0x38>
	{
		gpio_write_pin(led->port_info.port_type,led->port_info.pin_type,VALUE_LOW);	
     6d6:	40 e0       	ldi	r20, 0x00	; 0
     6d8:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
	}
	else
	{
		return ret;
	}
	return ret;
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	08 95       	ret
		gpio_write_pin(led->port_info.port_type,led->port_info.pin_type,VALUE_LOW);	
		ret=R_OK;
	}
	else
	{
		return ret;
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	08 95       	ret
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	08 95       	ret
     6e8:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
}
     6ea:	08 95       	ret

000006ec <led_turn_toggle>:
 * @return Status of the function 
 *         (R_OK) : The function done successfully
 */

ret_status led_turn_toggle(led_t* led)
{
     6ec:	fc 01       	movw	r30, r24
	ret_status ret=R_NOK;
	if((led !=NULL_POINTER)&&((led->port_info.port_type)<PORT_INVALID)&&((led->port_info.pin_type)<PIN_INVALID))
     6ee:	89 2b       	or	r24, r25
     6f0:	a1 f0       	breq	.+40     	; 0x71a <led_turn_toggle+0x2e>
     6f2:	90 81       	ld	r25, Z
     6f4:	89 2f       	mov	r24, r25
     6f6:	8f 70       	andi	r24, 0x0F	; 15
     6f8:	28 2f       	mov	r18, r24
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	24 30       	cpi	r18, 0x04	; 4
     6fe:	31 05       	cpc	r19, r1
     700:	74 f4       	brge	.+28     	; 0x71e <led_turn_toggle+0x32>
     702:	69 2f       	mov	r22, r25
     704:	62 95       	swap	r22
     706:	6f 70       	andi	r22, 0x0F	; 15
     708:	26 2f       	mov	r18, r22
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	28 30       	cpi	r18, 0x08	; 8
     70e:	31 05       	cpc	r19, r1
     710:	44 f4       	brge	.+16     	; 0x722 <led_turn_toggle+0x36>
	{
		gpio_toggle_pin(led->port_info.port_type,led->port_info.pin_type);
     712:	0e 94 25 05 	call	0xa4a	; 0xa4a <gpio_toggle_pin>
	}
	else
	{
		return ret;
	}
	return ret;
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	08 95       	ret
		gpio_toggle_pin(led->port_info.port_type,led->port_info.pin_type);
		ret=R_OK;
	}
	else
	{
		return ret;
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	08 95       	ret
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	08 95       	ret
     722:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
     724:	08 95       	ret

00000726 <relay_initialize>:
 *  Author: NourhanAlrefaei
 */ 
#include "hal_relay.h"

ret_status relay_initialize(relay_t *relay)
{
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	fc 01       	movw	r30, r24
	ret_status ret=R_NOK;
	if((relay!=NULL_POINTER)&&(relay->port_name<PORT_INVALID)&&(relay->pin<PIN_INVALID))
     72c:	89 2b       	or	r24, r25
     72e:	c9 f0       	breq	.+50     	; 0x762 <relay_initialize+0x3c>
     730:	80 81       	ld	r24, Z
     732:	8f 70       	andi	r24, 0x0F	; 15
     734:	28 2f       	mov	r18, r24
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	24 30       	cpi	r18, 0x04	; 4
     73a:	31 05       	cpc	r19, r1
     73c:	a4 f4       	brge	.+40     	; 0x766 <relay_initialize+0x40>
     73e:	61 81       	ldd	r22, Z+1	; 0x01
     740:	68 30       	cpi	r22, 0x08	; 8
     742:	98 f4       	brcc	.+38     	; 0x76a <relay_initialize+0x44>
     744:	ef 01       	movw	r28, r30
	{
		gpio_pin_direction_initialize(relay->port_name,relay->pin,DIRECTION_OUTPUT);
     746:	41 e0       	ldi	r20, 0x01	; 1
     748:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
		gpio_write_pin(relay->port_name,relay->pin,VALUE_LOW);
     74c:	88 81       	ld	r24, Y
     74e:	40 e0       	ldi	r20, 0x00	; 0
     750:	69 81       	ldd	r22, Y+1	; 0x01
     752:	8f 70       	andi	r24, 0x0F	; 15
     754:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
		relay->relay_status=RELAY_OFF;
     758:	8a 81       	ldd	r24, Y+2	; 0x02
     75a:	8e 7f       	andi	r24, 0xFE	; 254
     75c:	8a 83       	std	Y+2, r24	; 0x02
	}
	else
	{
		return ret;
	}
	return ret;
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	05 c0       	rjmp	.+10     	; 0x76c <relay_initialize+0x46>
		relay->relay_status=RELAY_OFF;
		ret=R_OK;
	}
	else
	{
		return ret;
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	03 c0       	rjmp	.+6      	; 0x76c <relay_initialize+0x46>
     766:	80 e0       	ldi	r24, 0x00	; 0
     768:	01 c0       	rjmp	.+2      	; 0x76c <relay_initialize+0x46>
     76a:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
}
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	08 95       	ret

00000772 <relay_turn_on>:
ret_status relay_turn_on(relay_t *relay)
{
     772:	cf 93       	push	r28
     774:	df 93       	push	r29
     776:	fc 01       	movw	r30, r24
	ret_status ret=R_NOK;
	if((relay!=NULL_POINTER)&&(relay->port_name<PORT_INVALID)&&(relay->pin<PIN_INVALID))
     778:	89 2b       	or	r24, r25
     77a:	99 f0       	breq	.+38     	; 0x7a2 <relay_turn_on+0x30>
     77c:	80 81       	ld	r24, Z
     77e:	8f 70       	andi	r24, 0x0F	; 15
     780:	28 2f       	mov	r18, r24
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	24 30       	cpi	r18, 0x04	; 4
     786:	31 05       	cpc	r19, r1
     788:	74 f4       	brge	.+28     	; 0x7a6 <relay_turn_on+0x34>
     78a:	61 81       	ldd	r22, Z+1	; 0x01
     78c:	68 30       	cpi	r22, 0x08	; 8
     78e:	68 f4       	brcc	.+26     	; 0x7aa <relay_turn_on+0x38>
     790:	ef 01       	movw	r28, r30
	{
		gpio_write_pin(relay->port_name,relay->pin,VALUE_HIGH);
     792:	41 e0       	ldi	r20, 0x01	; 1
     794:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
		relay->relay_status=RELAY_ON;
     798:	8a 81       	ldd	r24, Y+2	; 0x02
     79a:	81 60       	ori	r24, 0x01	; 1
     79c:	8a 83       	std	Y+2, r24	; 0x02
	}
	else
	{
		return ret;
	}
	return ret;
     79e:	81 e0       	ldi	r24, 0x01	; 1
     7a0:	05 c0       	rjmp	.+10     	; 0x7ac <relay_turn_on+0x3a>
		relay->relay_status=RELAY_ON;
		ret=R_OK;
	}
	else
	{
		return ret;
     7a2:	80 e0       	ldi	r24, 0x00	; 0
     7a4:	03 c0       	rjmp	.+6      	; 0x7ac <relay_turn_on+0x3a>
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	01 c0       	rjmp	.+2      	; 0x7ac <relay_turn_on+0x3a>
     7aa:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
}
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	08 95       	ret

000007b2 <relay_turn_off>:
ret_status relay_turn_off(relay_t *relay)
{
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	fc 01       	movw	r30, r24
	ret_status ret=R_NOK;
	if((relay!=NULL_POINTER)&&(relay->port_name<PORT_INVALID)&&(relay->pin<PIN_INVALID))
     7b8:	89 2b       	or	r24, r25
     7ba:	99 f0       	breq	.+38     	; 0x7e2 <relay_turn_off+0x30>
     7bc:	80 81       	ld	r24, Z
     7be:	8f 70       	andi	r24, 0x0F	; 15
     7c0:	28 2f       	mov	r18, r24
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	24 30       	cpi	r18, 0x04	; 4
     7c6:	31 05       	cpc	r19, r1
     7c8:	74 f4       	brge	.+28     	; 0x7e6 <relay_turn_off+0x34>
     7ca:	61 81       	ldd	r22, Z+1	; 0x01
     7cc:	68 30       	cpi	r22, 0x08	; 8
     7ce:	68 f4       	brcc	.+26     	; 0x7ea <relay_turn_off+0x38>
     7d0:	ef 01       	movw	r28, r30
	{
		gpio_write_pin(relay->port_name,relay->pin,VALUE_LOW);
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	0e 94 42 05 	call	0xa84	; 0xa84 <gpio_write_pin>
		relay->relay_status=RELAY_OFF;
     7d8:	8a 81       	ldd	r24, Y+2	; 0x02
     7da:	8e 7f       	andi	r24, 0xFE	; 254
     7dc:	8a 83       	std	Y+2, r24	; 0x02
	}
	else
	{
		return ret;
	}
	return ret;
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	05 c0       	rjmp	.+10     	; 0x7ec <relay_turn_off+0x3a>
		relay->relay_status=RELAY_OFF;
		ret=R_OK;
	}
	else
	{
		return ret;
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	03 c0       	rjmp	.+6      	; 0x7ec <relay_turn_off+0x3a>
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	01 c0       	rjmp	.+2      	; 0x7ec <relay_turn_off+0x3a>
     7ea:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
}
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
     7f0:	08 95       	ret

000007f2 <TempSensor_init>:
 */ 
#include "lm35.h"


ret_status TempSensor_init(tempSensor_t *tempSensor)
{
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
	ret_status ret=R_NOK;
	if((tempSensor!=NULL_POINTER)&&(tempSensor->port_type==PORT_A)&&(tempSensor->pin_type<PIN_INVALID))
     7f6:	00 97       	sbiw	r24, 0x00	; 0
     7f8:	a9 f0       	breq	.+42     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     7fa:	fc 01       	movw	r30, r24
     7fc:	20 81       	ld	r18, Z
     7fe:	2f 70       	andi	r18, 0x0F	; 15
     800:	99 f4       	brne	.+38     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     802:	ec 01       	movw	r28, r24
     804:	60 81       	ld	r22, Z
     806:	62 95       	swap	r22
     808:	6f 70       	andi	r22, 0x0F	; 15
     80a:	67 70       	andi	r22, 0x07	; 7
	{
		gpio_pin_direction_initialize(tempSensor->port_type,tempSensor->pin_type,DIRECTION_INPUT);
     80c:	40 e0       	ldi	r20, 0x00	; 0
     80e:	82 2f       	mov	r24, r18
     810:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
		adc_init(tempSensor->pin_type);
     814:	88 81       	ld	r24, Y
     816:	82 95       	swap	r24
     818:	8f 70       	andi	r24, 0x0F	; 15
     81a:	87 70       	andi	r24, 0x07	; 7
     81c:	0e 94 58 04 	call	0x8b0	; 0x8b0 <adc_init>
	}
	else
	{
		return ret;
	}
	return ret;
     820:	81 e0       	ldi	r24, 0x01	; 1
     822:	03 c0       	rjmp	.+6      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
		adc_init(tempSensor->pin_type);
		ret=R_OK;
	}
	else
	{
		return ret;
     824:	80 e0       	ldi	r24, 0x00	; 0
     826:	01 c0       	rjmp	.+2      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     828:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
}
     82a:	df 91       	pop	r29
     82c:	cf 91       	pop	r28
     82e:	08 95       	ret

00000830 <TempSensor_get_value>:
ret_status TempSensor_get_value(tempSensor_t *tempSensor,uint8_type* temp_value)
{
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	fc 01       	movw	r30, r24
	float32_type Voltage=ZERO_INIT;
	ret_status ret=R_NOK;
	if((tempSensor!=NULL_POINTER)&&(tempSensor->port_type==PORT_A)&&(tempSensor->pin_type<PIN_INVALID))
     836:	89 2b       	or	r24, r25
     838:	31 f1       	breq	.+76     	; 0x886 <__stack+0x27>
     83a:	90 81       	ld	r25, Z
     83c:	9f 70       	andi	r25, 0x0F	; 15
     83e:	29 f5       	brne	.+74     	; 0x88a <__stack+0x2b>
     840:	eb 01       	movw	r28, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     842:	80 e1       	ldi	r24, 0x10	; 16
     844:	8a 95       	dec	r24
     846:	f1 f7       	brne	.-4      	; 0x844 <TempSensor_get_value+0x14>
     848:	00 c0       	rjmp	.+0      	; 0x84a <TempSensor_get_value+0x1a>
	{
		_delay_us(50);
		adc_start_conversion(tempSensor->pin_type);
     84a:	80 81       	ld	r24, Z
     84c:	82 95       	swap	r24
     84e:	8f 70       	andi	r24, 0x0F	; 15
     850:	87 70       	andi	r24, 0x07	; 7
     852:	0e 94 70 04 	call	0x8e0	; 0x8e0 <adc_start_conversion>
		uint16_type adc_value=adc_read_value();         //Read Analog Channel 
     856:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <adc_read_value>
		//Calculate the Temperature 
		Voltage =(5.0/1023.0)*adc_value;
     85a:	bc 01       	movw	r22, r24
     85c:	80 e0       	ldi	r24, 0x00	; 0
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	0e 94 92 06 	call	0xd24	; 0xd24 <__floatunsisf>
     864:	2a e0       	ldi	r18, 0x0A	; 10
     866:	38 e2       	ldi	r19, 0x28	; 40
     868:	40 ea       	ldi	r20, 0xA0	; 160
     86a:	5b e3       	ldi	r21, 0x3B	; 59
     86c:	0e 94 20 07 	call	0xe40	; 0xe40 <__mulsf3>
		*temp_value=Voltage/0.01;                      // temp=(voltage/10mv)
     870:	2a e0       	ldi	r18, 0x0A	; 10
     872:	37 ed       	ldi	r19, 0xD7	; 215
     874:	43 e2       	ldi	r20, 0x23	; 35
     876:	5c e3       	ldi	r21, 0x3C	; 60
     878:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__divsf3>
     87c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fixunssfsi>
     880:	68 83       	st	Y, r22
	}
	else
	{
		return ret;
	}
	return ret;
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	03 c0       	rjmp	.+6      	; 0x88c <__stack+0x2d>
		*temp_value=Voltage/0.01;                      // temp=(voltage/10mv)
		ret=R_OK;
	}
	else
	{
		return ret;
     886:	80 e0       	ldi	r24, 0x00	; 0
     888:	01 c0       	rjmp	.+2      	; 0x88c <__stack+0x2d>
     88a:	80 e0       	ldi	r24, 0x00	; 0
	}
	return ret;
     88c:	df 91       	pop	r29
     88e:	cf 91       	pop	r28
     890:	08 95       	ret

00000892 <main>:
#define  F_CPU    16000000UL
#include "System/System.h"

int main(void)
{
	Sys_init();
     892:	0e 94 80 05 	call	0xb00	; 0xb00 <Sys_init>
    while (1) 
    {
		switch(	Current_state)
     896:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <Current_state>
     89a:	88 23       	and	r24, r24
     89c:	19 f0       	breq	.+6      	; 0x8a4 <main+0x12>
     89e:	81 30       	cpi	r24, 0x01	; 1
     8a0:	21 f0       	breq	.+8      	; 0x8aa <main+0x18>
     8a2:	f9 cf       	rjmp	.-14     	; 0x896 <main+0x4>
		{
			case Normal_Mode:
			{
				Normal_state();
     8a4:	0e 94 95 05 	call	0xb2a	; 0xb2a <Normal_state>
				break;
     8a8:	f6 cf       	rjmp	.-20     	; 0x896 <main+0x4>
			}
			case Fire_Mode:
			{
				Fire_state();
     8aa:	0e 94 c7 05 	call	0xb8e	; 0xb8e <Fire_state>
				break;
     8ae:	f3 cf       	rjmp	.-26     	; 0x896 <main+0x4>

000008b0 <adc_init>:
}

/*Call Back Function*/
void ADC_setCallBack(void(*CopyFunctionPtr)(void))
{
	adc_call_Back=CopyFunctionPtr;
     8b0:	40 e0       	ldi	r20, 0x00	; 0
     8b2:	68 2f       	mov	r22, r24
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	0e 94 ac 04 	call	0x958	; 0x958 <gpio_pin_direction_initialize>
     8ba:	87 b1       	in	r24, 0x07	; 7
     8bc:	8f 73       	andi	r24, 0x3F	; 63
     8be:	87 b9       	out	0x07, r24	; 7
     8c0:	87 b1       	in	r24, 0x07	; 7
     8c2:	80 64       	ori	r24, 0x40	; 64
     8c4:	87 b9       	out	0x07, r24	; 7
     8c6:	86 b1       	in	r24, 0x06	; 6
     8c8:	8f 7d       	andi	r24, 0xDF	; 223
     8ca:	86 b9       	out	0x06, r24	; 6
     8cc:	87 b1       	in	r24, 0x07	; 7
     8ce:	8f 7d       	andi	r24, 0xDF	; 223
     8d0:	87 b9       	out	0x07, r24	; 7
     8d2:	86 b1       	in	r24, 0x06	; 6
     8d4:	80 68       	ori	r24, 0x80	; 128
     8d6:	86 b9       	out	0x06, r24	; 6
     8d8:	86 b1       	in	r24, 0x06	; 6
     8da:	87 60       	ori	r24, 0x07	; 7
     8dc:	86 b9       	out	0x06, r24	; 6
     8de:	08 95       	ret

000008e0 <adc_start_conversion>:
     8e0:	97 b1       	in	r25, 0x07	; 7
     8e2:	90 7e       	andi	r25, 0xE0	; 224
     8e4:	97 b9       	out	0x07, r25	; 7
     8e6:	97 b1       	in	r25, 0x07	; 7
     8e8:	89 2b       	or	r24, r25
     8ea:	87 b9       	out	0x07, r24	; 7
     8ec:	86 b1       	in	r24, 0x06	; 6
     8ee:	80 64       	ori	r24, 0x40	; 64
     8f0:	86 b9       	out	0x06, r24	; 6
     8f2:	08 95       	ret

000008f4 <adc_read_value>:
     8f4:	36 99       	sbic	0x06, 6	; 6
     8f6:	fe cf       	rjmp	.-4      	; 0x8f4 <adc_read_value>
     8f8:	24 b1       	in	r18, 0x04	; 4
     8fa:	85 b1       	in	r24, 0x05	; 5
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	98 2f       	mov	r25, r24
     900:	88 27       	eor	r24, r24
     902:	82 2b       	or	r24, r18
     904:	08 95       	ret

00000906 <__vector_16>:
}
void __vector_16(void)
{
     906:	1f 92       	push	r1
     908:	0f 92       	push	r0
     90a:	0f b6       	in	r0, 0x3f	; 63
     90c:	0f 92       	push	r0
     90e:	11 24       	eor	r1, r1
     910:	2f 93       	push	r18
     912:	3f 93       	push	r19
     914:	4f 93       	push	r20
     916:	5f 93       	push	r21
     918:	6f 93       	push	r22
     91a:	7f 93       	push	r23
     91c:	8f 93       	push	r24
     91e:	9f 93       	push	r25
     920:	af 93       	push	r26
     922:	bf 93       	push	r27
     924:	ef 93       	push	r30
     926:	ff 93       	push	r31
	if(adc_call_Back!=NULL_POINTER)
     928:	e0 91 9c 00 	lds	r30, 0x009C	; 0x80009c <__data_end>
     92c:	f0 91 9d 00 	lds	r31, 0x009D	; 0x80009d <__data_end+0x1>
     930:	30 97       	sbiw	r30, 0x00	; 0
     932:	09 f0       	breq	.+2      	; 0x936 <__vector_16+0x30>
	{
		adc_call_Back();
     934:	09 95       	icall
	}
	
}	
     936:	ff 91       	pop	r31
     938:	ef 91       	pop	r30
     93a:	bf 91       	pop	r27
     93c:	af 91       	pop	r26
     93e:	9f 91       	pop	r25
     940:	8f 91       	pop	r24
     942:	7f 91       	pop	r23
     944:	6f 91       	pop	r22
     946:	5f 91       	pop	r21
     948:	4f 91       	pop	r20
     94a:	3f 91       	pop	r19
     94c:	2f 91       	pop	r18
     94e:	0f 90       	pop	r0
     950:	0f be       	out	0x3f, r0	; 63
     952:	0f 90       	pop	r0
     954:	1f 90       	pop	r1
     956:	18 95       	reti

00000958 <gpio_pin_direction_initialize>:
	else
	{
		return ret;
	}
	return ret;
}
     958:	84 30       	cpi	r24, 0x04	; 4
     95a:	a0 f5       	brcc	.+104    	; 0x9c4 <gpio_pin_direction_initialize+0x6c>
     95c:	68 30       	cpi	r22, 0x08	; 8
     95e:	a0 f5       	brcc	.+104    	; 0x9c8 <gpio_pin_direction_initialize+0x70>
     960:	42 30       	cpi	r20, 0x02	; 2
     962:	a0 f5       	brcc	.+104    	; 0x9cc <gpio_pin_direction_initialize+0x74>
     964:	44 23       	and	r20, r20
     966:	19 f0       	breq	.+6      	; 0x96e <gpio_pin_direction_initialize+0x16>
     968:	41 30       	cpi	r20, 0x01	; 1
     96a:	b9 f0       	breq	.+46     	; 0x99a <gpio_pin_direction_initialize+0x42>
     96c:	31 c0       	rjmp	.+98     	; 0x9d0 <gpio_pin_direction_initialize+0x78>
     96e:	e8 2f       	mov	r30, r24
     970:	f0 e0       	ldi	r31, 0x00	; 0
     972:	ee 0f       	add	r30, r30
     974:	ff 1f       	adc	r31, r31
     976:	eb 58       	subi	r30, 0x8B	; 139
     978:	ff 4f       	sbci	r31, 0xFF	; 255
     97a:	01 90       	ld	r0, Z+
     97c:	f0 81       	ld	r31, Z
     97e:	e0 2d       	mov	r30, r0
     980:	20 81       	ld	r18, Z
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	02 c0       	rjmp	.+4      	; 0x98c <gpio_pin_direction_initialize+0x34>
     988:	88 0f       	add	r24, r24
     98a:	99 1f       	adc	r25, r25
     98c:	6a 95       	dec	r22
     98e:	e2 f7       	brpl	.-8      	; 0x988 <gpio_pin_direction_initialize+0x30>
     990:	80 95       	com	r24
     992:	82 23       	and	r24, r18
     994:	80 83       	st	Z, r24
     996:	81 e0       	ldi	r24, 0x01	; 1
     998:	08 95       	ret
     99a:	e8 2f       	mov	r30, r24
     99c:	f0 e0       	ldi	r31, 0x00	; 0
     99e:	ee 0f       	add	r30, r30
     9a0:	ff 1f       	adc	r31, r31
     9a2:	eb 58       	subi	r30, 0x8B	; 139
     9a4:	ff 4f       	sbci	r31, 0xFF	; 255
     9a6:	01 90       	ld	r0, Z+
     9a8:	f0 81       	ld	r31, Z
     9aa:	e0 2d       	mov	r30, r0
     9ac:	20 81       	ld	r18, Z
     9ae:	81 e0       	ldi	r24, 0x01	; 1
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <gpio_pin_direction_initialize+0x60>
     9b4:	88 0f       	add	r24, r24
     9b6:	99 1f       	adc	r25, r25
     9b8:	6a 95       	dec	r22
     9ba:	e2 f7       	brpl	.-8      	; 0x9b4 <gpio_pin_direction_initialize+0x5c>
     9bc:	82 2b       	or	r24, r18
     9be:	80 83       	st	Z, r24
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	08 95       	ret
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	08 95       	ret
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	08 95       	ret
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 95       	ret
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	08 95       	ret

000009d4 <gpio_set_pin>:
     9d4:	84 30       	cpi	r24, 0x04	; 4
     9d6:	b8 f4       	brcc	.+46     	; 0xa06 <gpio_set_pin+0x32>
     9d8:	68 30       	cpi	r22, 0x08	; 8
     9da:	b8 f4       	brcc	.+46     	; 0xa0a <gpio_set_pin+0x36>
     9dc:	e8 2f       	mov	r30, r24
     9de:	f0 e0       	ldi	r31, 0x00	; 0
     9e0:	ee 0f       	add	r30, r30
     9e2:	ff 1f       	adc	r31, r31
     9e4:	e3 59       	subi	r30, 0x93	; 147
     9e6:	ff 4f       	sbci	r31, 0xFF	; 255
     9e8:	01 90       	ld	r0, Z+
     9ea:	f0 81       	ld	r31, Z
     9ec:	e0 2d       	mov	r30, r0
     9ee:	20 81       	ld	r18, Z
     9f0:	81 e0       	ldi	r24, 0x01	; 1
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	02 c0       	rjmp	.+4      	; 0x9fa <gpio_set_pin+0x26>
     9f6:	88 0f       	add	r24, r24
     9f8:	99 1f       	adc	r25, r25
     9fa:	6a 95       	dec	r22
     9fc:	e2 f7       	brpl	.-8      	; 0x9f6 <gpio_set_pin+0x22>
     9fe:	82 2b       	or	r24, r18
     a00:	80 83       	st	Z, r24
     a02:	81 e0       	ldi	r24, 0x01	; 1
     a04:	08 95       	ret
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	08 95       	ret
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	08 95       	ret

00000a0e <gpio_clear_pin>:
     a0e:	84 30       	cpi	r24, 0x04	; 4
     a10:	c0 f4       	brcc	.+48     	; 0xa42 <gpio_clear_pin+0x34>
     a12:	68 30       	cpi	r22, 0x08	; 8
     a14:	c0 f4       	brcc	.+48     	; 0xa46 <gpio_clear_pin+0x38>
     a16:	e8 2f       	mov	r30, r24
     a18:	f0 e0       	ldi	r31, 0x00	; 0
     a1a:	ee 0f       	add	r30, r30
     a1c:	ff 1f       	adc	r31, r31
     a1e:	e3 59       	subi	r30, 0x93	; 147
     a20:	ff 4f       	sbci	r31, 0xFF	; 255
     a22:	01 90       	ld	r0, Z+
     a24:	f0 81       	ld	r31, Z
     a26:	e0 2d       	mov	r30, r0
     a28:	20 81       	ld	r18, Z
     a2a:	81 e0       	ldi	r24, 0x01	; 1
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <gpio_clear_pin+0x26>
     a30:	88 0f       	add	r24, r24
     a32:	99 1f       	adc	r25, r25
     a34:	6a 95       	dec	r22
     a36:	e2 f7       	brpl	.-8      	; 0xa30 <gpio_clear_pin+0x22>
     a38:	80 95       	com	r24
     a3a:	82 23       	and	r24, r18
     a3c:	80 83       	st	Z, r24
     a3e:	81 e0       	ldi	r24, 0x01	; 1
     a40:	08 95       	ret
     a42:	80 e0       	ldi	r24, 0x00	; 0
     a44:	08 95       	ret
     a46:	80 e0       	ldi	r24, 0x00	; 0
     a48:	08 95       	ret

00000a4a <gpio_toggle_pin>:
     a4a:	84 30       	cpi	r24, 0x04	; 4
     a4c:	b8 f4       	brcc	.+46     	; 0xa7c <gpio_toggle_pin+0x32>
     a4e:	68 30       	cpi	r22, 0x08	; 8
     a50:	b8 f4       	brcc	.+46     	; 0xa80 <gpio_toggle_pin+0x36>
     a52:	e8 2f       	mov	r30, r24
     a54:	f0 e0       	ldi	r31, 0x00	; 0
     a56:	ee 0f       	add	r30, r30
     a58:	ff 1f       	adc	r31, r31
     a5a:	e3 59       	subi	r30, 0x93	; 147
     a5c:	ff 4f       	sbci	r31, 0xFF	; 255
     a5e:	01 90       	ld	r0, Z+
     a60:	f0 81       	ld	r31, Z
     a62:	e0 2d       	mov	r30, r0
     a64:	20 81       	ld	r18, Z
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	90 e0       	ldi	r25, 0x00	; 0
     a6a:	02 c0       	rjmp	.+4      	; 0xa70 <gpio_toggle_pin+0x26>
     a6c:	88 0f       	add	r24, r24
     a6e:	99 1f       	adc	r25, r25
     a70:	6a 95       	dec	r22
     a72:	e2 f7       	brpl	.-8      	; 0xa6c <gpio_toggle_pin+0x22>
     a74:	82 27       	eor	r24, r18
     a76:	80 83       	st	Z, r24
     a78:	81 e0       	ldi	r24, 0x01	; 1
     a7a:	08 95       	ret
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	08 95       	ret
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	08 95       	ret

00000a84 <gpio_write_pin>:
 *       (R_OK) : The function done successfully
 */
ret_status gpio_write_pin(enum_port_type port_type,enum_pin_type pin_type,enum_pin_value_type pin_value_type)
{
	ret_status ret=R_NOK;
	if((port_type<PORT_INVALID)&&(pin_type<PIN_INVALID)&&(pin_value_type<VALUE_INVALID))
     a84:	84 30       	cpi	r24, 0x04	; 4
     a86:	a0 f5       	brcc	.+104    	; 0xaf0 <gpio_write_pin+0x6c>
     a88:	68 30       	cpi	r22, 0x08	; 8
     a8a:	a0 f5       	brcc	.+104    	; 0xaf4 <gpio_write_pin+0x70>
     a8c:	42 30       	cpi	r20, 0x02	; 2
     a8e:	a0 f5       	brcc	.+104    	; 0xaf8 <gpio_write_pin+0x74>
	{
		switch(pin_value_type)
     a90:	44 23       	and	r20, r20
     a92:	19 f0       	breq	.+6      	; 0xa9a <gpio_write_pin+0x16>
     a94:	41 30       	cpi	r20, 0x01	; 1
     a96:	b9 f0       	breq	.+46     	; 0xac6 <gpio_write_pin+0x42>
     a98:	31 c0       	rjmp	.+98     	; 0xafc <gpio_write_pin+0x78>
		{	case VALUE_LOW:
			{
				CLEAR_BIT(*port_register[port_type],pin_type);
     a9a:	e8 2f       	mov	r30, r24
     a9c:	f0 e0       	ldi	r31, 0x00	; 0
     a9e:	ee 0f       	add	r30, r30
     aa0:	ff 1f       	adc	r31, r31
     aa2:	e3 59       	subi	r30, 0x93	; 147
     aa4:	ff 4f       	sbci	r31, 0xFF	; 255
     aa6:	01 90       	ld	r0, Z+
     aa8:	f0 81       	ld	r31, Z
     aaa:	e0 2d       	mov	r30, r0
     aac:	20 81       	ld	r18, Z
     aae:	81 e0       	ldi	r24, 0x01	; 1
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	02 c0       	rjmp	.+4      	; 0xab8 <gpio_write_pin+0x34>
     ab4:	88 0f       	add	r24, r24
     ab6:	99 1f       	adc	r25, r25
     ab8:	6a 95       	dec	r22
     aba:	e2 f7       	brpl	.-8      	; 0xab4 <gpio_write_pin+0x30>
     abc:	80 95       	com	r24
     abe:	82 23       	and	r24, r18
     ac0:	80 83       	st	Z, r24
	}
	else
	{
		return ret;
	}
	return ret;
     ac2:	81 e0       	ldi	r24, 0x01	; 1
	{
		switch(pin_value_type)
		{	case VALUE_LOW:
			{
				CLEAR_BIT(*port_register[port_type],pin_type);
				break;
     ac4:	08 95       	ret
			}
			case VALUE_HIGH:
			{
				SET_BIT(*port_register[port_type],pin_type);
     ac6:	e8 2f       	mov	r30, r24
     ac8:	f0 e0       	ldi	r31, 0x00	; 0
     aca:	ee 0f       	add	r30, r30
     acc:	ff 1f       	adc	r31, r31
     ace:	e3 59       	subi	r30, 0x93	; 147
     ad0:	ff 4f       	sbci	r31, 0xFF	; 255
     ad2:	01 90       	ld	r0, Z+
     ad4:	f0 81       	ld	r31, Z
     ad6:	e0 2d       	mov	r30, r0
     ad8:	20 81       	ld	r18, Z
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	02 c0       	rjmp	.+4      	; 0xae4 <gpio_write_pin+0x60>
     ae0:	88 0f       	add	r24, r24
     ae2:	99 1f       	adc	r25, r25
     ae4:	6a 95       	dec	r22
     ae6:	e2 f7       	brpl	.-8      	; 0xae0 <gpio_write_pin+0x5c>
     ae8:	82 2b       	or	r24, r18
     aea:	80 83       	st	Z, r24
	}
	else
	{
		return ret;
	}
	return ret;
     aec:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case VALUE_HIGH:
			{
				SET_BIT(*port_register[port_type],pin_type);
				break;
     aee:	08 95       	ret
		
		ret=R_OK;
	}
	else
	{
		return ret;
     af0:	80 e0       	ldi	r24, 0x00	; 0
     af2:	08 95       	ret
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	08 95       	ret
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	08 95       	ret
	}
	return ret;
     afc:	81 e0       	ldi	r24, 0x01	; 1
}
     afe:	08 95       	ret

00000b00 <Sys_init>:
relay_t Fan={.port_name=PORT_B,PIN_4};
	

void Sys_init(void)
{
	lcd_initialize(&char_lcd);
     b00:	85 e6       	ldi	r24, 0x65	; 101
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	0e 94 7f 02 	call	0x4fe	; 0x4fe <lcd_initialize>
	TempSensor_init(&tempSen);
     b08:	8e e9       	ldi	r24, 0x9E	; 158
     b0a:	90 e0       	ldi	r25, 0x00	; 0
     b0c:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <TempSensor_init>
	Buzz_INIT();
     b10:	0e 94 49 00 	call	0x92	; 0x92 <Buzz_INIT>
	led_init(&led_indicator);
     b14:	83 e6       	ldi	r24, 0x63	; 99
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	0e 94 2e 03 	call	0x65c	; 0x65c <led_init>
	relay_initialize(&Fan);
     b1c:	80 e6       	ldi	r24, 0x60	; 96
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	0e 94 93 03 	call	0x726	; 0x726 <relay_initialize>
	
	Current_state=Normal_Mode;
     b24:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <Current_state>
     b28:	08 95       	ret

00000b2a <Normal_state>:
}
void Normal_state(void)
{
	relay_turn_off(&Fan);
     b2a:	80 e6       	ldi	r24, 0x60	; 96
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <relay_turn_off>
	led_turn_off(&led_indicator);
     b32:	83 e6       	ldi	r24, 0x63	; 99
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	0e 94 58 03 	call	0x6b0	; 0x6b0 <led_turn_off>
	Buzz_OFF();
     b3a:	0e 94 54 00 	call	0xa8	; 0xa8 <Buzz_OFF>
	TempSensor_get_value(&tempSen,&Measured_Temp);
     b3e:	60 ea       	ldi	r22, 0xA0	; 160
     b40:	70 e0       	ldi	r23, 0x00	; 0
     b42:	8e e9       	ldi	r24, 0x9E	; 158
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	0e 94 18 04 	call	0x830	; 0x830 <TempSensor_get_value>
	lcd_send_string_data_pos(&char_lcd,0,0,"Temperature:");
     b4a:	2d e7       	ldi	r18, 0x7D	; 125
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	40 e0       	ldi	r20, 0x00	; 0
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	85 e6       	ldi	r24, 0x65	; 101
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <lcd_send_string_data_pos>
	byte_to_string(Measured_Temp,Measured_Temp_txt);
     b5a:	61 ea       	ldi	r22, 0xA1	; 161
     b5c:	70 e0       	ldi	r23, 0x00	; 0
     b5e:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <Measured_Temp>
     b62:	0e 94 1d 03 	call	0x63a	; 0x63a <byte_to_string>
	lcd_send_string_data_current_pos(&char_lcd,Measured_Temp_txt);
     b66:	61 ea       	ldi	r22, 0xA1	; 161
     b68:	70 e0       	ldi	r23, 0x00	; 0
     b6a:	85 e6       	ldi	r24, 0x65	; 101
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	0e 94 00 03 	call	0x600	; 0x600 <lcd_send_string_data_current_pos>
	lcd_send_string_data_current_pos(&char_lcd,"C");
     b72:	6a e8       	ldi	r22, 0x8A	; 138
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	85 e6       	ldi	r24, 0x65	; 101
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 00 03 	call	0x600	; 0x600 <lcd_send_string_data_current_pos>
	if(Measured_Temp>Temp_REF)
     b7e:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <Measured_Temp>
     b82:	89 32       	cpi	r24, 0x29	; 41
     b84:	18 f0       	brcs	.+6      	; 0xb8c <Normal_state+0x62>
	{
		Current_state=Fire_Mode;
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <Current_state>
     b8c:	08 95       	ret

00000b8e <Fire_state>:
	}
	
}
void Fire_state(void)
{
	lcd_send_string_data_pos(&char_lcd,0,0,"There is a fire");
     b8e:	2c e8       	ldi	r18, 0x8C	; 140
     b90:	30 e0       	ldi	r19, 0x00	; 0
     b92:	40 e0       	ldi	r20, 0x00	; 0
     b94:	60 e0       	ldi	r22, 0x00	; 0
     b96:	85 e6       	ldi	r24, 0x65	; 101
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <lcd_send_string_data_pos>
	relay_turn_on(&Fan);
     b9e:	80 e6       	ldi	r24, 0x60	; 96
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 b9 03 	call	0x772	; 0x772 <relay_turn_on>
	Buzz_ON();
     ba6:	0e 94 4f 00 	call	0x9e	; 0x9e <Buzz_ON>
	led_turn_toggle(&led_indicator);
     baa:	83 e6       	ldi	r24, 0x63	; 99
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	0e 94 76 03 	call	0x6ec	; 0x6ec <led_turn_toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     bb2:	2f e3       	ldi	r18, 0x3F	; 63
     bb4:	8d e0       	ldi	r24, 0x0D	; 13
     bb6:	93 e0       	ldi	r25, 0x03	; 3
     bb8:	21 50       	subi	r18, 0x01	; 1
     bba:	80 40       	sbci	r24, 0x00	; 0
     bbc:	90 40       	sbci	r25, 0x00	; 0
     bbe:	e1 f7       	brne	.-8      	; 0xbb8 <Fire_state+0x2a>
     bc0:	00 c0       	rjmp	.+0      	; 0xbc2 <Fire_state+0x34>
     bc2:	00 00       	nop
	_delay_ms(1000);
	Buzz_OFF();
     bc4:	0e 94 54 00 	call	0xa8	; 0xa8 <Buzz_OFF>
	TempSensor_get_value(&tempSen,&Measured_Temp);
     bc8:	60 ea       	ldi	r22, 0xA0	; 160
     bca:	70 e0       	ldi	r23, 0x00	; 0
     bcc:	8e e9       	ldi	r24, 0x9E	; 158
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	0e 94 18 04 	call	0x830	; 0x830 <TempSensor_get_value>
	if(Measured_Temp<Temp_REF)
     bd4:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <Measured_Temp>
     bd8:	88 32       	cpi	r24, 0x28	; 40
     bda:	10 f4       	brcc	.+4      	; 0xbe0 <Fire_state+0x52>
	{
		Current_state=Normal_Mode;
     bdc:	10 92 9f 00 	sts	0x009F, r1	; 0x80009f <Current_state>
     be0:	08 95       	ret

00000be2 <__divsf3>:
     be2:	0e 94 05 06 	call	0xc0a	; 0xc0a <__divsf3x>
     be6:	0c 94 e6 06 	jmp	0xdcc	; 0xdcc <__fp_round>
     bea:	0e 94 df 06 	call	0xdbe	; 0xdbe <__fp_pscB>
     bee:	58 f0       	brcs	.+22     	; 0xc06 <__divsf3+0x24>
     bf0:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fp_pscA>
     bf4:	40 f0       	brcs	.+16     	; 0xc06 <__divsf3+0x24>
     bf6:	29 f4       	brne	.+10     	; 0xc02 <__divsf3+0x20>
     bf8:	5f 3f       	cpi	r21, 0xFF	; 255
     bfa:	29 f0       	breq	.+10     	; 0xc06 <__divsf3+0x24>
     bfc:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_inf>
     c00:	51 11       	cpse	r21, r1
     c02:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__fp_szero>
     c06:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__fp_nan>

00000c0a <__divsf3x>:
     c0a:	0e 94 f7 06 	call	0xdee	; 0xdee <__fp_split3>
     c0e:	68 f3       	brcs	.-38     	; 0xbea <__divsf3+0x8>

00000c10 <__divsf3_pse>:
     c10:	99 23       	and	r25, r25
     c12:	b1 f3       	breq	.-20     	; 0xc00 <__divsf3+0x1e>
     c14:	55 23       	and	r21, r21
     c16:	91 f3       	breq	.-28     	; 0xbfc <__divsf3+0x1a>
     c18:	95 1b       	sub	r25, r21
     c1a:	55 0b       	sbc	r21, r21
     c1c:	bb 27       	eor	r27, r27
     c1e:	aa 27       	eor	r26, r26
     c20:	62 17       	cp	r22, r18
     c22:	73 07       	cpc	r23, r19
     c24:	84 07       	cpc	r24, r20
     c26:	38 f0       	brcs	.+14     	; 0xc36 <__divsf3_pse+0x26>
     c28:	9f 5f       	subi	r25, 0xFF	; 255
     c2a:	5f 4f       	sbci	r21, 0xFF	; 255
     c2c:	22 0f       	add	r18, r18
     c2e:	33 1f       	adc	r19, r19
     c30:	44 1f       	adc	r20, r20
     c32:	aa 1f       	adc	r26, r26
     c34:	a9 f3       	breq	.-22     	; 0xc20 <__divsf3_pse+0x10>
     c36:	35 d0       	rcall	.+106    	; 0xca2 <__divsf3_pse+0x92>
     c38:	0e 2e       	mov	r0, r30
     c3a:	3a f0       	brmi	.+14     	; 0xc4a <__divsf3_pse+0x3a>
     c3c:	e0 e8       	ldi	r30, 0x80	; 128
     c3e:	32 d0       	rcall	.+100    	; 0xca4 <__divsf3_pse+0x94>
     c40:	91 50       	subi	r25, 0x01	; 1
     c42:	50 40       	sbci	r21, 0x00	; 0
     c44:	e6 95       	lsr	r30
     c46:	00 1c       	adc	r0, r0
     c48:	ca f7       	brpl	.-14     	; 0xc3c <__divsf3_pse+0x2c>
     c4a:	2b d0       	rcall	.+86     	; 0xca2 <__divsf3_pse+0x92>
     c4c:	fe 2f       	mov	r31, r30
     c4e:	29 d0       	rcall	.+82     	; 0xca2 <__divsf3_pse+0x92>
     c50:	66 0f       	add	r22, r22
     c52:	77 1f       	adc	r23, r23
     c54:	88 1f       	adc	r24, r24
     c56:	bb 1f       	adc	r27, r27
     c58:	26 17       	cp	r18, r22
     c5a:	37 07       	cpc	r19, r23
     c5c:	48 07       	cpc	r20, r24
     c5e:	ab 07       	cpc	r26, r27
     c60:	b0 e8       	ldi	r27, 0x80	; 128
     c62:	09 f0       	breq	.+2      	; 0xc66 <__divsf3_pse+0x56>
     c64:	bb 0b       	sbc	r27, r27
     c66:	80 2d       	mov	r24, r0
     c68:	bf 01       	movw	r22, r30
     c6a:	ff 27       	eor	r31, r31
     c6c:	93 58       	subi	r25, 0x83	; 131
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	3a f0       	brmi	.+14     	; 0xc80 <__divsf3_pse+0x70>
     c72:	9e 3f       	cpi	r25, 0xFE	; 254
     c74:	51 05       	cpc	r21, r1
     c76:	78 f0       	brcs	.+30     	; 0xc96 <__divsf3_pse+0x86>
     c78:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_inf>
     c7c:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__fp_szero>
     c80:	5f 3f       	cpi	r21, 0xFF	; 255
     c82:	e4 f3       	brlt	.-8      	; 0xc7c <__divsf3_pse+0x6c>
     c84:	98 3e       	cpi	r25, 0xE8	; 232
     c86:	d4 f3       	brlt	.-12     	; 0xc7c <__divsf3_pse+0x6c>
     c88:	86 95       	lsr	r24
     c8a:	77 95       	ror	r23
     c8c:	67 95       	ror	r22
     c8e:	b7 95       	ror	r27
     c90:	f7 95       	ror	r31
     c92:	9f 5f       	subi	r25, 0xFF	; 255
     c94:	c9 f7       	brne	.-14     	; 0xc88 <__divsf3_pse+0x78>
     c96:	88 0f       	add	r24, r24
     c98:	91 1d       	adc	r25, r1
     c9a:	96 95       	lsr	r25
     c9c:	87 95       	ror	r24
     c9e:	97 f9       	bld	r25, 7
     ca0:	08 95       	ret
     ca2:	e1 e0       	ldi	r30, 0x01	; 1
     ca4:	66 0f       	add	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	88 1f       	adc	r24, r24
     caa:	bb 1f       	adc	r27, r27
     cac:	62 17       	cp	r22, r18
     cae:	73 07       	cpc	r23, r19
     cb0:	84 07       	cpc	r24, r20
     cb2:	ba 07       	cpc	r27, r26
     cb4:	20 f0       	brcs	.+8      	; 0xcbe <__divsf3_pse+0xae>
     cb6:	62 1b       	sub	r22, r18
     cb8:	73 0b       	sbc	r23, r19
     cba:	84 0b       	sbc	r24, r20
     cbc:	ba 0b       	sbc	r27, r26
     cbe:	ee 1f       	adc	r30, r30
     cc0:	88 f7       	brcc	.-30     	; 0xca4 <__divsf3_pse+0x94>
     cc2:	e0 95       	com	r30
     cc4:	08 95       	ret

00000cc6 <__fixunssfsi>:
     cc6:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__fp_splitA>
     cca:	88 f0       	brcs	.+34     	; 0xcee <__fixunssfsi+0x28>
     ccc:	9f 57       	subi	r25, 0x7F	; 127
     cce:	98 f0       	brcs	.+38     	; 0xcf6 <__fixunssfsi+0x30>
     cd0:	b9 2f       	mov	r27, r25
     cd2:	99 27       	eor	r25, r25
     cd4:	b7 51       	subi	r27, 0x17	; 23
     cd6:	b0 f0       	brcs	.+44     	; 0xd04 <__fixunssfsi+0x3e>
     cd8:	e1 f0       	breq	.+56     	; 0xd12 <__fixunssfsi+0x4c>
     cda:	66 0f       	add	r22, r22
     cdc:	77 1f       	adc	r23, r23
     cde:	88 1f       	adc	r24, r24
     ce0:	99 1f       	adc	r25, r25
     ce2:	1a f0       	brmi	.+6      	; 0xcea <__fixunssfsi+0x24>
     ce4:	ba 95       	dec	r27
     ce6:	c9 f7       	brne	.-14     	; 0xcda <__fixunssfsi+0x14>
     ce8:	14 c0       	rjmp	.+40     	; 0xd12 <__fixunssfsi+0x4c>
     cea:	b1 30       	cpi	r27, 0x01	; 1
     cec:	91 f0       	breq	.+36     	; 0xd12 <__fixunssfsi+0x4c>
     cee:	0e 94 19 07 	call	0xe32	; 0xe32 <__fp_zero>
     cf2:	b1 e0       	ldi	r27, 0x01	; 1
     cf4:	08 95       	ret
     cf6:	0c 94 19 07 	jmp	0xe32	; 0xe32 <__fp_zero>
     cfa:	67 2f       	mov	r22, r23
     cfc:	78 2f       	mov	r23, r24
     cfe:	88 27       	eor	r24, r24
     d00:	b8 5f       	subi	r27, 0xF8	; 248
     d02:	39 f0       	breq	.+14     	; 0xd12 <__fixunssfsi+0x4c>
     d04:	b9 3f       	cpi	r27, 0xF9	; 249
     d06:	cc f3       	brlt	.-14     	; 0xcfa <__fixunssfsi+0x34>
     d08:	86 95       	lsr	r24
     d0a:	77 95       	ror	r23
     d0c:	67 95       	ror	r22
     d0e:	b3 95       	inc	r27
     d10:	d9 f7       	brne	.-10     	; 0xd08 <__fixunssfsi+0x42>
     d12:	3e f4       	brtc	.+14     	; 0xd22 <__fixunssfsi+0x5c>
     d14:	90 95       	com	r25
     d16:	80 95       	com	r24
     d18:	70 95       	com	r23
     d1a:	61 95       	neg	r22
     d1c:	7f 4f       	sbci	r23, 0xFF	; 255
     d1e:	8f 4f       	sbci	r24, 0xFF	; 255
     d20:	9f 4f       	sbci	r25, 0xFF	; 255
     d22:	08 95       	ret

00000d24 <__floatunsisf>:
     d24:	e8 94       	clt
     d26:	09 c0       	rjmp	.+18     	; 0xd3a <__floatsisf+0x12>

00000d28 <__floatsisf>:
     d28:	97 fb       	bst	r25, 7
     d2a:	3e f4       	brtc	.+14     	; 0xd3a <__floatsisf+0x12>
     d2c:	90 95       	com	r25
     d2e:	80 95       	com	r24
     d30:	70 95       	com	r23
     d32:	61 95       	neg	r22
     d34:	7f 4f       	sbci	r23, 0xFF	; 255
     d36:	8f 4f       	sbci	r24, 0xFF	; 255
     d38:	9f 4f       	sbci	r25, 0xFF	; 255
     d3a:	99 23       	and	r25, r25
     d3c:	a9 f0       	breq	.+42     	; 0xd68 <__floatsisf+0x40>
     d3e:	f9 2f       	mov	r31, r25
     d40:	96 e9       	ldi	r25, 0x96	; 150
     d42:	bb 27       	eor	r27, r27
     d44:	93 95       	inc	r25
     d46:	f6 95       	lsr	r31
     d48:	87 95       	ror	r24
     d4a:	77 95       	ror	r23
     d4c:	67 95       	ror	r22
     d4e:	b7 95       	ror	r27
     d50:	f1 11       	cpse	r31, r1
     d52:	f8 cf       	rjmp	.-16     	; 0xd44 <__floatsisf+0x1c>
     d54:	fa f4       	brpl	.+62     	; 0xd94 <__floatsisf+0x6c>
     d56:	bb 0f       	add	r27, r27
     d58:	11 f4       	brne	.+4      	; 0xd5e <__floatsisf+0x36>
     d5a:	60 ff       	sbrs	r22, 0
     d5c:	1b c0       	rjmp	.+54     	; 0xd94 <__floatsisf+0x6c>
     d5e:	6f 5f       	subi	r22, 0xFF	; 255
     d60:	7f 4f       	sbci	r23, 0xFF	; 255
     d62:	8f 4f       	sbci	r24, 0xFF	; 255
     d64:	9f 4f       	sbci	r25, 0xFF	; 255
     d66:	16 c0       	rjmp	.+44     	; 0xd94 <__floatsisf+0x6c>
     d68:	88 23       	and	r24, r24
     d6a:	11 f0       	breq	.+4      	; 0xd70 <__floatsisf+0x48>
     d6c:	96 e9       	ldi	r25, 0x96	; 150
     d6e:	11 c0       	rjmp	.+34     	; 0xd92 <__floatsisf+0x6a>
     d70:	77 23       	and	r23, r23
     d72:	21 f0       	breq	.+8      	; 0xd7c <__floatsisf+0x54>
     d74:	9e e8       	ldi	r25, 0x8E	; 142
     d76:	87 2f       	mov	r24, r23
     d78:	76 2f       	mov	r23, r22
     d7a:	05 c0       	rjmp	.+10     	; 0xd86 <__floatsisf+0x5e>
     d7c:	66 23       	and	r22, r22
     d7e:	71 f0       	breq	.+28     	; 0xd9c <__floatsisf+0x74>
     d80:	96 e8       	ldi	r25, 0x86	; 134
     d82:	86 2f       	mov	r24, r22
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	60 e0       	ldi	r22, 0x00	; 0
     d88:	2a f0       	brmi	.+10     	; 0xd94 <__floatsisf+0x6c>
     d8a:	9a 95       	dec	r25
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	da f7       	brpl	.-10     	; 0xd8a <__floatsisf+0x62>
     d94:	88 0f       	add	r24, r24
     d96:	96 95       	lsr	r25
     d98:	87 95       	ror	r24
     d9a:	97 f9       	bld	r25, 7
     d9c:	08 95       	ret

00000d9e <__fp_inf>:
     d9e:	97 f9       	bld	r25, 7
     da0:	9f 67       	ori	r25, 0x7F	; 127
     da2:	80 e8       	ldi	r24, 0x80	; 128
     da4:	70 e0       	ldi	r23, 0x00	; 0
     da6:	60 e0       	ldi	r22, 0x00	; 0
     da8:	08 95       	ret

00000daa <__fp_nan>:
     daa:	9f ef       	ldi	r25, 0xFF	; 255
     dac:	80 ec       	ldi	r24, 0xC0	; 192
     dae:	08 95       	ret

00000db0 <__fp_pscA>:
     db0:	00 24       	eor	r0, r0
     db2:	0a 94       	dec	r0
     db4:	16 16       	cp	r1, r22
     db6:	17 06       	cpc	r1, r23
     db8:	18 06       	cpc	r1, r24
     dba:	09 06       	cpc	r0, r25
     dbc:	08 95       	ret

00000dbe <__fp_pscB>:
     dbe:	00 24       	eor	r0, r0
     dc0:	0a 94       	dec	r0
     dc2:	12 16       	cp	r1, r18
     dc4:	13 06       	cpc	r1, r19
     dc6:	14 06       	cpc	r1, r20
     dc8:	05 06       	cpc	r0, r21
     dca:	08 95       	ret

00000dcc <__fp_round>:
     dcc:	09 2e       	mov	r0, r25
     dce:	03 94       	inc	r0
     dd0:	00 0c       	add	r0, r0
     dd2:	11 f4       	brne	.+4      	; 0xdd8 <__fp_round+0xc>
     dd4:	88 23       	and	r24, r24
     dd6:	52 f0       	brmi	.+20     	; 0xdec <__fp_round+0x20>
     dd8:	bb 0f       	add	r27, r27
     dda:	40 f4       	brcc	.+16     	; 0xdec <__fp_round+0x20>
     ddc:	bf 2b       	or	r27, r31
     dde:	11 f4       	brne	.+4      	; 0xde4 <__fp_round+0x18>
     de0:	60 ff       	sbrs	r22, 0
     de2:	04 c0       	rjmp	.+8      	; 0xdec <__fp_round+0x20>
     de4:	6f 5f       	subi	r22, 0xFF	; 255
     de6:	7f 4f       	sbci	r23, 0xFF	; 255
     de8:	8f 4f       	sbci	r24, 0xFF	; 255
     dea:	9f 4f       	sbci	r25, 0xFF	; 255
     dec:	08 95       	ret

00000dee <__fp_split3>:
     dee:	57 fd       	sbrc	r21, 7
     df0:	90 58       	subi	r25, 0x80	; 128
     df2:	44 0f       	add	r20, r20
     df4:	55 1f       	adc	r21, r21
     df6:	59 f0       	breq	.+22     	; 0xe0e <__fp_splitA+0x10>
     df8:	5f 3f       	cpi	r21, 0xFF	; 255
     dfa:	71 f0       	breq	.+28     	; 0xe18 <__fp_splitA+0x1a>
     dfc:	47 95       	ror	r20

00000dfe <__fp_splitA>:
     dfe:	88 0f       	add	r24, r24
     e00:	97 fb       	bst	r25, 7
     e02:	99 1f       	adc	r25, r25
     e04:	61 f0       	breq	.+24     	; 0xe1e <__fp_splitA+0x20>
     e06:	9f 3f       	cpi	r25, 0xFF	; 255
     e08:	79 f0       	breq	.+30     	; 0xe28 <__fp_splitA+0x2a>
     e0a:	87 95       	ror	r24
     e0c:	08 95       	ret
     e0e:	12 16       	cp	r1, r18
     e10:	13 06       	cpc	r1, r19
     e12:	14 06       	cpc	r1, r20
     e14:	55 1f       	adc	r21, r21
     e16:	f2 cf       	rjmp	.-28     	; 0xdfc <__fp_split3+0xe>
     e18:	46 95       	lsr	r20
     e1a:	f1 df       	rcall	.-30     	; 0xdfe <__fp_splitA>
     e1c:	08 c0       	rjmp	.+16     	; 0xe2e <__fp_splitA+0x30>
     e1e:	16 16       	cp	r1, r22
     e20:	17 06       	cpc	r1, r23
     e22:	18 06       	cpc	r1, r24
     e24:	99 1f       	adc	r25, r25
     e26:	f1 cf       	rjmp	.-30     	; 0xe0a <__fp_splitA+0xc>
     e28:	86 95       	lsr	r24
     e2a:	71 05       	cpc	r23, r1
     e2c:	61 05       	cpc	r22, r1
     e2e:	08 94       	sec
     e30:	08 95       	ret

00000e32 <__fp_zero>:
     e32:	e8 94       	clt

00000e34 <__fp_szero>:
     e34:	bb 27       	eor	r27, r27
     e36:	66 27       	eor	r22, r22
     e38:	77 27       	eor	r23, r23
     e3a:	cb 01       	movw	r24, r22
     e3c:	97 f9       	bld	r25, 7
     e3e:	08 95       	ret

00000e40 <__mulsf3>:
     e40:	0e 94 33 07 	call	0xe66	; 0xe66 <__mulsf3x>
     e44:	0c 94 e6 06 	jmp	0xdcc	; 0xdcc <__fp_round>
     e48:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__fp_pscA>
     e4c:	38 f0       	brcs	.+14     	; 0xe5c <__mulsf3+0x1c>
     e4e:	0e 94 df 06 	call	0xdbe	; 0xdbe <__fp_pscB>
     e52:	20 f0       	brcs	.+8      	; 0xe5c <__mulsf3+0x1c>
     e54:	95 23       	and	r25, r21
     e56:	11 f0       	breq	.+4      	; 0xe5c <__mulsf3+0x1c>
     e58:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_inf>
     e5c:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__fp_nan>
     e60:	11 24       	eor	r1, r1
     e62:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__fp_szero>

00000e66 <__mulsf3x>:
     e66:	0e 94 f7 06 	call	0xdee	; 0xdee <__fp_split3>
     e6a:	70 f3       	brcs	.-36     	; 0xe48 <__mulsf3+0x8>

00000e6c <__mulsf3_pse>:
     e6c:	95 9f       	mul	r25, r21
     e6e:	c1 f3       	breq	.-16     	; 0xe60 <__mulsf3+0x20>
     e70:	95 0f       	add	r25, r21
     e72:	50 e0       	ldi	r21, 0x00	; 0
     e74:	55 1f       	adc	r21, r21
     e76:	62 9f       	mul	r22, r18
     e78:	f0 01       	movw	r30, r0
     e7a:	72 9f       	mul	r23, r18
     e7c:	bb 27       	eor	r27, r27
     e7e:	f0 0d       	add	r31, r0
     e80:	b1 1d       	adc	r27, r1
     e82:	63 9f       	mul	r22, r19
     e84:	aa 27       	eor	r26, r26
     e86:	f0 0d       	add	r31, r0
     e88:	b1 1d       	adc	r27, r1
     e8a:	aa 1f       	adc	r26, r26
     e8c:	64 9f       	mul	r22, r20
     e8e:	66 27       	eor	r22, r22
     e90:	b0 0d       	add	r27, r0
     e92:	a1 1d       	adc	r26, r1
     e94:	66 1f       	adc	r22, r22
     e96:	82 9f       	mul	r24, r18
     e98:	22 27       	eor	r18, r18
     e9a:	b0 0d       	add	r27, r0
     e9c:	a1 1d       	adc	r26, r1
     e9e:	62 1f       	adc	r22, r18
     ea0:	73 9f       	mul	r23, r19
     ea2:	b0 0d       	add	r27, r0
     ea4:	a1 1d       	adc	r26, r1
     ea6:	62 1f       	adc	r22, r18
     ea8:	83 9f       	mul	r24, r19
     eaa:	a0 0d       	add	r26, r0
     eac:	61 1d       	adc	r22, r1
     eae:	22 1f       	adc	r18, r18
     eb0:	74 9f       	mul	r23, r20
     eb2:	33 27       	eor	r19, r19
     eb4:	a0 0d       	add	r26, r0
     eb6:	61 1d       	adc	r22, r1
     eb8:	23 1f       	adc	r18, r19
     eba:	84 9f       	mul	r24, r20
     ebc:	60 0d       	add	r22, r0
     ebe:	21 1d       	adc	r18, r1
     ec0:	82 2f       	mov	r24, r18
     ec2:	76 2f       	mov	r23, r22
     ec4:	6a 2f       	mov	r22, r26
     ec6:	11 24       	eor	r1, r1
     ec8:	9f 57       	subi	r25, 0x7F	; 127
     eca:	50 40       	sbci	r21, 0x00	; 0
     ecc:	9a f0       	brmi	.+38     	; 0xef4 <__mulsf3_pse+0x88>
     ece:	f1 f0       	breq	.+60     	; 0xf0c <__mulsf3_pse+0xa0>
     ed0:	88 23       	and	r24, r24
     ed2:	4a f0       	brmi	.+18     	; 0xee6 <__mulsf3_pse+0x7a>
     ed4:	ee 0f       	add	r30, r30
     ed6:	ff 1f       	adc	r31, r31
     ed8:	bb 1f       	adc	r27, r27
     eda:	66 1f       	adc	r22, r22
     edc:	77 1f       	adc	r23, r23
     ede:	88 1f       	adc	r24, r24
     ee0:	91 50       	subi	r25, 0x01	; 1
     ee2:	50 40       	sbci	r21, 0x00	; 0
     ee4:	a9 f7       	brne	.-22     	; 0xed0 <__mulsf3_pse+0x64>
     ee6:	9e 3f       	cpi	r25, 0xFE	; 254
     ee8:	51 05       	cpc	r21, r1
     eea:	80 f0       	brcs	.+32     	; 0xf0c <__mulsf3_pse+0xa0>
     eec:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__fp_inf>
     ef0:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__fp_szero>
     ef4:	5f 3f       	cpi	r21, 0xFF	; 255
     ef6:	e4 f3       	brlt	.-8      	; 0xef0 <__mulsf3_pse+0x84>
     ef8:	98 3e       	cpi	r25, 0xE8	; 232
     efa:	d4 f3       	brlt	.-12     	; 0xef0 <__mulsf3_pse+0x84>
     efc:	86 95       	lsr	r24
     efe:	77 95       	ror	r23
     f00:	67 95       	ror	r22
     f02:	b7 95       	ror	r27
     f04:	f7 95       	ror	r31
     f06:	e7 95       	ror	r30
     f08:	9f 5f       	subi	r25, 0xFF	; 255
     f0a:	c1 f7       	brne	.-16     	; 0xefc <__mulsf3_pse+0x90>
     f0c:	fe 2b       	or	r31, r30
     f0e:	88 0f       	add	r24, r24
     f10:	91 1d       	adc	r25, r1
     f12:	96 95       	lsr	r25
     f14:	87 95       	ror	r24
     f16:	97 f9       	bld	r25, 7
     f18:	08 95       	ret

00000f1a <sprintf>:
     f1a:	ae e0       	ldi	r26, 0x0E	; 14
     f1c:	b0 e0       	ldi	r27, 0x00	; 0
     f1e:	e3 e9       	ldi	r30, 0x93	; 147
     f20:	f7 e0       	ldi	r31, 0x07	; 7
     f22:	0c 94 4e 0a 	jmp	0x149c	; 0x149c <__prologue_saves__+0x1c>
     f26:	0d 89       	ldd	r16, Y+21	; 0x15
     f28:	1e 89       	ldd	r17, Y+22	; 0x16
     f2a:	86 e0       	ldi	r24, 0x06	; 6
     f2c:	8c 83       	std	Y+4, r24	; 0x04
     f2e:	1a 83       	std	Y+2, r17	; 0x02
     f30:	09 83       	std	Y+1, r16	; 0x01
     f32:	8f ef       	ldi	r24, 0xFF	; 255
     f34:	9f e7       	ldi	r25, 0x7F	; 127
     f36:	9e 83       	std	Y+6, r25	; 0x06
     f38:	8d 83       	std	Y+5, r24	; 0x05
     f3a:	ae 01       	movw	r20, r28
     f3c:	47 5e       	subi	r20, 0xE7	; 231
     f3e:	5f 4f       	sbci	r21, 0xFF	; 255
     f40:	6f 89       	ldd	r22, Y+23	; 0x17
     f42:	78 8d       	ldd	r23, Y+24	; 0x18
     f44:	ce 01       	movw	r24, r28
     f46:	01 96       	adiw	r24, 0x01	; 1
     f48:	0e 94 af 07 	call	0xf5e	; 0xf5e <vfprintf>
     f4c:	ef 81       	ldd	r30, Y+7	; 0x07
     f4e:	f8 85       	ldd	r31, Y+8	; 0x08
     f50:	e0 0f       	add	r30, r16
     f52:	f1 1f       	adc	r31, r17
     f54:	10 82       	st	Z, r1
     f56:	2e 96       	adiw	r28, 0x0e	; 14
     f58:	e4 e0       	ldi	r30, 0x04	; 4
     f5a:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__epilogue_restores__+0x1c>

00000f5e <vfprintf>:
     f5e:	ab e0       	ldi	r26, 0x0B	; 11
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e5 eb       	ldi	r30, 0xB5	; 181
     f64:	f7 e0       	ldi	r31, 0x07	; 7
     f66:	0c 94 40 0a 	jmp	0x1480	; 0x1480 <__prologue_saves__>
     f6a:	6c 01       	movw	r12, r24
     f6c:	7b 01       	movw	r14, r22
     f6e:	8a 01       	movw	r16, r20
     f70:	fc 01       	movw	r30, r24
     f72:	17 82       	std	Z+7, r1	; 0x07
     f74:	16 82       	std	Z+6, r1	; 0x06
     f76:	83 81       	ldd	r24, Z+3	; 0x03
     f78:	81 ff       	sbrs	r24, 1
     f7a:	cc c1       	rjmp	.+920    	; 0x1314 <vfprintf+0x3b6>
     f7c:	ce 01       	movw	r24, r28
     f7e:	01 96       	adiw	r24, 0x01	; 1
     f80:	3c 01       	movw	r6, r24
     f82:	f6 01       	movw	r30, r12
     f84:	93 81       	ldd	r25, Z+3	; 0x03
     f86:	f7 01       	movw	r30, r14
     f88:	93 fd       	sbrc	r25, 3
     f8a:	85 91       	lpm	r24, Z+
     f8c:	93 ff       	sbrs	r25, 3
     f8e:	81 91       	ld	r24, Z+
     f90:	7f 01       	movw	r14, r30
     f92:	88 23       	and	r24, r24
     f94:	09 f4       	brne	.+2      	; 0xf98 <vfprintf+0x3a>
     f96:	ba c1       	rjmp	.+884    	; 0x130c <vfprintf+0x3ae>
     f98:	85 32       	cpi	r24, 0x25	; 37
     f9a:	39 f4       	brne	.+14     	; 0xfaa <vfprintf+0x4c>
     f9c:	93 fd       	sbrc	r25, 3
     f9e:	85 91       	lpm	r24, Z+
     fa0:	93 ff       	sbrs	r25, 3
     fa2:	81 91       	ld	r24, Z+
     fa4:	7f 01       	movw	r14, r30
     fa6:	85 32       	cpi	r24, 0x25	; 37
     fa8:	29 f4       	brne	.+10     	; 0xfb4 <vfprintf+0x56>
     faa:	b6 01       	movw	r22, r12
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
     fb2:	e7 cf       	rjmp	.-50     	; 0xf82 <vfprintf+0x24>
     fb4:	91 2c       	mov	r9, r1
     fb6:	21 2c       	mov	r2, r1
     fb8:	31 2c       	mov	r3, r1
     fba:	ff e1       	ldi	r31, 0x1F	; 31
     fbc:	f3 15       	cp	r31, r3
     fbe:	d8 f0       	brcs	.+54     	; 0xff6 <vfprintf+0x98>
     fc0:	8b 32       	cpi	r24, 0x2B	; 43
     fc2:	79 f0       	breq	.+30     	; 0xfe2 <vfprintf+0x84>
     fc4:	38 f4       	brcc	.+14     	; 0xfd4 <vfprintf+0x76>
     fc6:	80 32       	cpi	r24, 0x20	; 32
     fc8:	79 f0       	breq	.+30     	; 0xfe8 <vfprintf+0x8a>
     fca:	83 32       	cpi	r24, 0x23	; 35
     fcc:	a1 f4       	brne	.+40     	; 0xff6 <vfprintf+0x98>
     fce:	23 2d       	mov	r18, r3
     fd0:	20 61       	ori	r18, 0x10	; 16
     fd2:	1d c0       	rjmp	.+58     	; 0x100e <vfprintf+0xb0>
     fd4:	8d 32       	cpi	r24, 0x2D	; 45
     fd6:	61 f0       	breq	.+24     	; 0xff0 <vfprintf+0x92>
     fd8:	80 33       	cpi	r24, 0x30	; 48
     fda:	69 f4       	brne	.+26     	; 0xff6 <vfprintf+0x98>
     fdc:	23 2d       	mov	r18, r3
     fde:	21 60       	ori	r18, 0x01	; 1
     fe0:	16 c0       	rjmp	.+44     	; 0x100e <vfprintf+0xb0>
     fe2:	83 2d       	mov	r24, r3
     fe4:	82 60       	ori	r24, 0x02	; 2
     fe6:	38 2e       	mov	r3, r24
     fe8:	e3 2d       	mov	r30, r3
     fea:	e4 60       	ori	r30, 0x04	; 4
     fec:	3e 2e       	mov	r3, r30
     fee:	2a c0       	rjmp	.+84     	; 0x1044 <vfprintf+0xe6>
     ff0:	f3 2d       	mov	r31, r3
     ff2:	f8 60       	ori	r31, 0x08	; 8
     ff4:	1d c0       	rjmp	.+58     	; 0x1030 <vfprintf+0xd2>
     ff6:	37 fc       	sbrc	r3, 7
     ff8:	2d c0       	rjmp	.+90     	; 0x1054 <vfprintf+0xf6>
     ffa:	20 ed       	ldi	r18, 0xD0	; 208
     ffc:	28 0f       	add	r18, r24
     ffe:	2a 30       	cpi	r18, 0x0A	; 10
    1000:	40 f0       	brcs	.+16     	; 0x1012 <vfprintf+0xb4>
    1002:	8e 32       	cpi	r24, 0x2E	; 46
    1004:	b9 f4       	brne	.+46     	; 0x1034 <vfprintf+0xd6>
    1006:	36 fc       	sbrc	r3, 6
    1008:	81 c1       	rjmp	.+770    	; 0x130c <vfprintf+0x3ae>
    100a:	23 2d       	mov	r18, r3
    100c:	20 64       	ori	r18, 0x40	; 64
    100e:	32 2e       	mov	r3, r18
    1010:	19 c0       	rjmp	.+50     	; 0x1044 <vfprintf+0xe6>
    1012:	36 fe       	sbrs	r3, 6
    1014:	06 c0       	rjmp	.+12     	; 0x1022 <vfprintf+0xc4>
    1016:	8a e0       	ldi	r24, 0x0A	; 10
    1018:	98 9e       	mul	r9, r24
    101a:	20 0d       	add	r18, r0
    101c:	11 24       	eor	r1, r1
    101e:	92 2e       	mov	r9, r18
    1020:	11 c0       	rjmp	.+34     	; 0x1044 <vfprintf+0xe6>
    1022:	ea e0       	ldi	r30, 0x0A	; 10
    1024:	2e 9e       	mul	r2, r30
    1026:	20 0d       	add	r18, r0
    1028:	11 24       	eor	r1, r1
    102a:	22 2e       	mov	r2, r18
    102c:	f3 2d       	mov	r31, r3
    102e:	f0 62       	ori	r31, 0x20	; 32
    1030:	3f 2e       	mov	r3, r31
    1032:	08 c0       	rjmp	.+16     	; 0x1044 <vfprintf+0xe6>
    1034:	8c 36       	cpi	r24, 0x6C	; 108
    1036:	21 f4       	brne	.+8      	; 0x1040 <vfprintf+0xe2>
    1038:	83 2d       	mov	r24, r3
    103a:	80 68       	ori	r24, 0x80	; 128
    103c:	38 2e       	mov	r3, r24
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0xe6>
    1040:	88 36       	cpi	r24, 0x68	; 104
    1042:	41 f4       	brne	.+16     	; 0x1054 <vfprintf+0xf6>
    1044:	f7 01       	movw	r30, r14
    1046:	93 fd       	sbrc	r25, 3
    1048:	85 91       	lpm	r24, Z+
    104a:	93 ff       	sbrs	r25, 3
    104c:	81 91       	ld	r24, Z+
    104e:	7f 01       	movw	r14, r30
    1050:	81 11       	cpse	r24, r1
    1052:	b3 cf       	rjmp	.-154    	; 0xfba <vfprintf+0x5c>
    1054:	98 2f       	mov	r25, r24
    1056:	9f 7d       	andi	r25, 0xDF	; 223
    1058:	95 54       	subi	r25, 0x45	; 69
    105a:	93 30       	cpi	r25, 0x03	; 3
    105c:	28 f4       	brcc	.+10     	; 0x1068 <vfprintf+0x10a>
    105e:	0c 5f       	subi	r16, 0xFC	; 252
    1060:	1f 4f       	sbci	r17, 0xFF	; 255
    1062:	9f e3       	ldi	r25, 0x3F	; 63
    1064:	99 83       	std	Y+1, r25	; 0x01
    1066:	0d c0       	rjmp	.+26     	; 0x1082 <vfprintf+0x124>
    1068:	83 36       	cpi	r24, 0x63	; 99
    106a:	31 f0       	breq	.+12     	; 0x1078 <vfprintf+0x11a>
    106c:	83 37       	cpi	r24, 0x73	; 115
    106e:	71 f0       	breq	.+28     	; 0x108c <vfprintf+0x12e>
    1070:	83 35       	cpi	r24, 0x53	; 83
    1072:	09 f0       	breq	.+2      	; 0x1076 <vfprintf+0x118>
    1074:	59 c0       	rjmp	.+178    	; 0x1128 <vfprintf+0x1ca>
    1076:	21 c0       	rjmp	.+66     	; 0x10ba <vfprintf+0x15c>
    1078:	f8 01       	movw	r30, r16
    107a:	80 81       	ld	r24, Z
    107c:	89 83       	std	Y+1, r24	; 0x01
    107e:	0e 5f       	subi	r16, 0xFE	; 254
    1080:	1f 4f       	sbci	r17, 0xFF	; 255
    1082:	88 24       	eor	r8, r8
    1084:	83 94       	inc	r8
    1086:	91 2c       	mov	r9, r1
    1088:	53 01       	movw	r10, r6
    108a:	13 c0       	rjmp	.+38     	; 0x10b2 <vfprintf+0x154>
    108c:	28 01       	movw	r4, r16
    108e:	f2 e0       	ldi	r31, 0x02	; 2
    1090:	4f 0e       	add	r4, r31
    1092:	51 1c       	adc	r5, r1
    1094:	f8 01       	movw	r30, r16
    1096:	a0 80       	ld	r10, Z
    1098:	b1 80       	ldd	r11, Z+1	; 0x01
    109a:	36 fe       	sbrs	r3, 6
    109c:	03 c0       	rjmp	.+6      	; 0x10a4 <vfprintf+0x146>
    109e:	69 2d       	mov	r22, r9
    10a0:	70 e0       	ldi	r23, 0x00	; 0
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <vfprintf+0x14a>
    10a4:	6f ef       	ldi	r22, 0xFF	; 255
    10a6:	7f ef       	ldi	r23, 0xFF	; 255
    10a8:	c5 01       	movw	r24, r10
    10aa:	0e 94 9b 09 	call	0x1336	; 0x1336 <strnlen>
    10ae:	4c 01       	movw	r8, r24
    10b0:	82 01       	movw	r16, r4
    10b2:	f3 2d       	mov	r31, r3
    10b4:	ff 77       	andi	r31, 0x7F	; 127
    10b6:	3f 2e       	mov	r3, r31
    10b8:	16 c0       	rjmp	.+44     	; 0x10e6 <vfprintf+0x188>
    10ba:	28 01       	movw	r4, r16
    10bc:	22 e0       	ldi	r18, 0x02	; 2
    10be:	42 0e       	add	r4, r18
    10c0:	51 1c       	adc	r5, r1
    10c2:	f8 01       	movw	r30, r16
    10c4:	a0 80       	ld	r10, Z
    10c6:	b1 80       	ldd	r11, Z+1	; 0x01
    10c8:	36 fe       	sbrs	r3, 6
    10ca:	03 c0       	rjmp	.+6      	; 0x10d2 <vfprintf+0x174>
    10cc:	69 2d       	mov	r22, r9
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	02 c0       	rjmp	.+4      	; 0x10d6 <vfprintf+0x178>
    10d2:	6f ef       	ldi	r22, 0xFF	; 255
    10d4:	7f ef       	ldi	r23, 0xFF	; 255
    10d6:	c5 01       	movw	r24, r10
    10d8:	0e 94 90 09 	call	0x1320	; 0x1320 <strnlen_P>
    10dc:	4c 01       	movw	r8, r24
    10de:	f3 2d       	mov	r31, r3
    10e0:	f0 68       	ori	r31, 0x80	; 128
    10e2:	3f 2e       	mov	r3, r31
    10e4:	82 01       	movw	r16, r4
    10e6:	33 fc       	sbrc	r3, 3
    10e8:	1b c0       	rjmp	.+54     	; 0x1120 <vfprintf+0x1c2>
    10ea:	82 2d       	mov	r24, r2
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	88 16       	cp	r8, r24
    10f0:	99 06       	cpc	r9, r25
    10f2:	b0 f4       	brcc	.+44     	; 0x1120 <vfprintf+0x1c2>
    10f4:	b6 01       	movw	r22, r12
    10f6:	80 e2       	ldi	r24, 0x20	; 32
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    10fe:	2a 94       	dec	r2
    1100:	f4 cf       	rjmp	.-24     	; 0x10ea <vfprintf+0x18c>
    1102:	f5 01       	movw	r30, r10
    1104:	37 fc       	sbrc	r3, 7
    1106:	85 91       	lpm	r24, Z+
    1108:	37 fe       	sbrs	r3, 7
    110a:	81 91       	ld	r24, Z+
    110c:	5f 01       	movw	r10, r30
    110e:	b6 01       	movw	r22, r12
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    1116:	21 10       	cpse	r2, r1
    1118:	2a 94       	dec	r2
    111a:	21 e0       	ldi	r18, 0x01	; 1
    111c:	82 1a       	sub	r8, r18
    111e:	91 08       	sbc	r9, r1
    1120:	81 14       	cp	r8, r1
    1122:	91 04       	cpc	r9, r1
    1124:	71 f7       	brne	.-36     	; 0x1102 <vfprintf+0x1a4>
    1126:	e8 c0       	rjmp	.+464    	; 0x12f8 <vfprintf+0x39a>
    1128:	84 36       	cpi	r24, 0x64	; 100
    112a:	11 f0       	breq	.+4      	; 0x1130 <vfprintf+0x1d2>
    112c:	89 36       	cpi	r24, 0x69	; 105
    112e:	41 f5       	brne	.+80     	; 0x1180 <vfprintf+0x222>
    1130:	f8 01       	movw	r30, r16
    1132:	37 fe       	sbrs	r3, 7
    1134:	07 c0       	rjmp	.+14     	; 0x1144 <vfprintf+0x1e6>
    1136:	60 81       	ld	r22, Z
    1138:	71 81       	ldd	r23, Z+1	; 0x01
    113a:	82 81       	ldd	r24, Z+2	; 0x02
    113c:	93 81       	ldd	r25, Z+3	; 0x03
    113e:	0c 5f       	subi	r16, 0xFC	; 252
    1140:	1f 4f       	sbci	r17, 0xFF	; 255
    1142:	08 c0       	rjmp	.+16     	; 0x1154 <vfprintf+0x1f6>
    1144:	60 81       	ld	r22, Z
    1146:	71 81       	ldd	r23, Z+1	; 0x01
    1148:	07 2e       	mov	r0, r23
    114a:	00 0c       	add	r0, r0
    114c:	88 0b       	sbc	r24, r24
    114e:	99 0b       	sbc	r25, r25
    1150:	0e 5f       	subi	r16, 0xFE	; 254
    1152:	1f 4f       	sbci	r17, 0xFF	; 255
    1154:	f3 2d       	mov	r31, r3
    1156:	ff 76       	andi	r31, 0x6F	; 111
    1158:	3f 2e       	mov	r3, r31
    115a:	97 ff       	sbrs	r25, 7
    115c:	09 c0       	rjmp	.+18     	; 0x1170 <vfprintf+0x212>
    115e:	90 95       	com	r25
    1160:	80 95       	com	r24
    1162:	70 95       	com	r23
    1164:	61 95       	neg	r22
    1166:	7f 4f       	sbci	r23, 0xFF	; 255
    1168:	8f 4f       	sbci	r24, 0xFF	; 255
    116a:	9f 4f       	sbci	r25, 0xFF	; 255
    116c:	f0 68       	ori	r31, 0x80	; 128
    116e:	3f 2e       	mov	r3, r31
    1170:	2a e0       	ldi	r18, 0x0A	; 10
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	a3 01       	movw	r20, r6
    1176:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <__ultoa_invert>
    117a:	88 2e       	mov	r8, r24
    117c:	86 18       	sub	r8, r6
    117e:	45 c0       	rjmp	.+138    	; 0x120a <vfprintf+0x2ac>
    1180:	85 37       	cpi	r24, 0x75	; 117
    1182:	31 f4       	brne	.+12     	; 0x1190 <vfprintf+0x232>
    1184:	23 2d       	mov	r18, r3
    1186:	2f 7e       	andi	r18, 0xEF	; 239
    1188:	b2 2e       	mov	r11, r18
    118a:	2a e0       	ldi	r18, 0x0A	; 10
    118c:	30 e0       	ldi	r19, 0x00	; 0
    118e:	25 c0       	rjmp	.+74     	; 0x11da <vfprintf+0x27c>
    1190:	93 2d       	mov	r25, r3
    1192:	99 7f       	andi	r25, 0xF9	; 249
    1194:	b9 2e       	mov	r11, r25
    1196:	8f 36       	cpi	r24, 0x6F	; 111
    1198:	c1 f0       	breq	.+48     	; 0x11ca <vfprintf+0x26c>
    119a:	18 f4       	brcc	.+6      	; 0x11a2 <vfprintf+0x244>
    119c:	88 35       	cpi	r24, 0x58	; 88
    119e:	79 f0       	breq	.+30     	; 0x11be <vfprintf+0x260>
    11a0:	b5 c0       	rjmp	.+362    	; 0x130c <vfprintf+0x3ae>
    11a2:	80 37       	cpi	r24, 0x70	; 112
    11a4:	19 f0       	breq	.+6      	; 0x11ac <vfprintf+0x24e>
    11a6:	88 37       	cpi	r24, 0x78	; 120
    11a8:	21 f0       	breq	.+8      	; 0x11b2 <vfprintf+0x254>
    11aa:	b0 c0       	rjmp	.+352    	; 0x130c <vfprintf+0x3ae>
    11ac:	e9 2f       	mov	r30, r25
    11ae:	e0 61       	ori	r30, 0x10	; 16
    11b0:	be 2e       	mov	r11, r30
    11b2:	b4 fe       	sbrs	r11, 4
    11b4:	0d c0       	rjmp	.+26     	; 0x11d0 <vfprintf+0x272>
    11b6:	fb 2d       	mov	r31, r11
    11b8:	f4 60       	ori	r31, 0x04	; 4
    11ba:	bf 2e       	mov	r11, r31
    11bc:	09 c0       	rjmp	.+18     	; 0x11d0 <vfprintf+0x272>
    11be:	34 fe       	sbrs	r3, 4
    11c0:	0a c0       	rjmp	.+20     	; 0x11d6 <vfprintf+0x278>
    11c2:	29 2f       	mov	r18, r25
    11c4:	26 60       	ori	r18, 0x06	; 6
    11c6:	b2 2e       	mov	r11, r18
    11c8:	06 c0       	rjmp	.+12     	; 0x11d6 <vfprintf+0x278>
    11ca:	28 e0       	ldi	r18, 0x08	; 8
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	05 c0       	rjmp	.+10     	; 0x11da <vfprintf+0x27c>
    11d0:	20 e1       	ldi	r18, 0x10	; 16
    11d2:	30 e0       	ldi	r19, 0x00	; 0
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0x27c>
    11d6:	20 e1       	ldi	r18, 0x10	; 16
    11d8:	32 e0       	ldi	r19, 0x02	; 2
    11da:	f8 01       	movw	r30, r16
    11dc:	b7 fe       	sbrs	r11, 7
    11de:	07 c0       	rjmp	.+14     	; 0x11ee <vfprintf+0x290>
    11e0:	60 81       	ld	r22, Z
    11e2:	71 81       	ldd	r23, Z+1	; 0x01
    11e4:	82 81       	ldd	r24, Z+2	; 0x02
    11e6:	93 81       	ldd	r25, Z+3	; 0x03
    11e8:	0c 5f       	subi	r16, 0xFC	; 252
    11ea:	1f 4f       	sbci	r17, 0xFF	; 255
    11ec:	06 c0       	rjmp	.+12     	; 0x11fa <vfprintf+0x29c>
    11ee:	60 81       	ld	r22, Z
    11f0:	71 81       	ldd	r23, Z+1	; 0x01
    11f2:	80 e0       	ldi	r24, 0x00	; 0
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	0e 5f       	subi	r16, 0xFE	; 254
    11f8:	1f 4f       	sbci	r17, 0xFF	; 255
    11fa:	a3 01       	movw	r20, r6
    11fc:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <__ultoa_invert>
    1200:	88 2e       	mov	r8, r24
    1202:	86 18       	sub	r8, r6
    1204:	fb 2d       	mov	r31, r11
    1206:	ff 77       	andi	r31, 0x7F	; 127
    1208:	3f 2e       	mov	r3, r31
    120a:	36 fe       	sbrs	r3, 6
    120c:	0d c0       	rjmp	.+26     	; 0x1228 <vfprintf+0x2ca>
    120e:	23 2d       	mov	r18, r3
    1210:	2e 7f       	andi	r18, 0xFE	; 254
    1212:	a2 2e       	mov	r10, r18
    1214:	89 14       	cp	r8, r9
    1216:	58 f4       	brcc	.+22     	; 0x122e <vfprintf+0x2d0>
    1218:	34 fe       	sbrs	r3, 4
    121a:	0b c0       	rjmp	.+22     	; 0x1232 <vfprintf+0x2d4>
    121c:	32 fc       	sbrc	r3, 2
    121e:	09 c0       	rjmp	.+18     	; 0x1232 <vfprintf+0x2d4>
    1220:	83 2d       	mov	r24, r3
    1222:	8e 7e       	andi	r24, 0xEE	; 238
    1224:	a8 2e       	mov	r10, r24
    1226:	05 c0       	rjmp	.+10     	; 0x1232 <vfprintf+0x2d4>
    1228:	b8 2c       	mov	r11, r8
    122a:	a3 2c       	mov	r10, r3
    122c:	03 c0       	rjmp	.+6      	; 0x1234 <vfprintf+0x2d6>
    122e:	b8 2c       	mov	r11, r8
    1230:	01 c0       	rjmp	.+2      	; 0x1234 <vfprintf+0x2d6>
    1232:	b9 2c       	mov	r11, r9
    1234:	a4 fe       	sbrs	r10, 4
    1236:	0f c0       	rjmp	.+30     	; 0x1256 <vfprintf+0x2f8>
    1238:	fe 01       	movw	r30, r28
    123a:	e8 0d       	add	r30, r8
    123c:	f1 1d       	adc	r31, r1
    123e:	80 81       	ld	r24, Z
    1240:	80 33       	cpi	r24, 0x30	; 48
    1242:	21 f4       	brne	.+8      	; 0x124c <vfprintf+0x2ee>
    1244:	9a 2d       	mov	r25, r10
    1246:	99 7e       	andi	r25, 0xE9	; 233
    1248:	a9 2e       	mov	r10, r25
    124a:	09 c0       	rjmp	.+18     	; 0x125e <vfprintf+0x300>
    124c:	a2 fe       	sbrs	r10, 2
    124e:	06 c0       	rjmp	.+12     	; 0x125c <vfprintf+0x2fe>
    1250:	b3 94       	inc	r11
    1252:	b3 94       	inc	r11
    1254:	04 c0       	rjmp	.+8      	; 0x125e <vfprintf+0x300>
    1256:	8a 2d       	mov	r24, r10
    1258:	86 78       	andi	r24, 0x86	; 134
    125a:	09 f0       	breq	.+2      	; 0x125e <vfprintf+0x300>
    125c:	b3 94       	inc	r11
    125e:	a3 fc       	sbrc	r10, 3
    1260:	11 c0       	rjmp	.+34     	; 0x1284 <vfprintf+0x326>
    1262:	a0 fe       	sbrs	r10, 0
    1264:	06 c0       	rjmp	.+12     	; 0x1272 <vfprintf+0x314>
    1266:	b2 14       	cp	r11, r2
    1268:	88 f4       	brcc	.+34     	; 0x128c <vfprintf+0x32e>
    126a:	28 0c       	add	r2, r8
    126c:	92 2c       	mov	r9, r2
    126e:	9b 18       	sub	r9, r11
    1270:	0e c0       	rjmp	.+28     	; 0x128e <vfprintf+0x330>
    1272:	b2 14       	cp	r11, r2
    1274:	60 f4       	brcc	.+24     	; 0x128e <vfprintf+0x330>
    1276:	b6 01       	movw	r22, r12
    1278:	80 e2       	ldi	r24, 0x20	; 32
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    1280:	b3 94       	inc	r11
    1282:	f7 cf       	rjmp	.-18     	; 0x1272 <vfprintf+0x314>
    1284:	b2 14       	cp	r11, r2
    1286:	18 f4       	brcc	.+6      	; 0x128e <vfprintf+0x330>
    1288:	2b 18       	sub	r2, r11
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <vfprintf+0x332>
    128c:	98 2c       	mov	r9, r8
    128e:	21 2c       	mov	r2, r1
    1290:	a4 fe       	sbrs	r10, 4
    1292:	10 c0       	rjmp	.+32     	; 0x12b4 <vfprintf+0x356>
    1294:	b6 01       	movw	r22, r12
    1296:	80 e3       	ldi	r24, 0x30	; 48
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    129e:	a2 fe       	sbrs	r10, 2
    12a0:	17 c0       	rjmp	.+46     	; 0x12d0 <vfprintf+0x372>
    12a2:	a1 fc       	sbrc	r10, 1
    12a4:	03 c0       	rjmp	.+6      	; 0x12ac <vfprintf+0x34e>
    12a6:	88 e7       	ldi	r24, 0x78	; 120
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <vfprintf+0x352>
    12ac:	88 e5       	ldi	r24, 0x58	; 88
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	b6 01       	movw	r22, r12
    12b2:	0c c0       	rjmp	.+24     	; 0x12cc <vfprintf+0x36e>
    12b4:	8a 2d       	mov	r24, r10
    12b6:	86 78       	andi	r24, 0x86	; 134
    12b8:	59 f0       	breq	.+22     	; 0x12d0 <vfprintf+0x372>
    12ba:	a1 fe       	sbrs	r10, 1
    12bc:	02 c0       	rjmp	.+4      	; 0x12c2 <vfprintf+0x364>
    12be:	8b e2       	ldi	r24, 0x2B	; 43
    12c0:	01 c0       	rjmp	.+2      	; 0x12c4 <vfprintf+0x366>
    12c2:	80 e2       	ldi	r24, 0x20	; 32
    12c4:	a7 fc       	sbrc	r10, 7
    12c6:	8d e2       	ldi	r24, 0x2D	; 45
    12c8:	b6 01       	movw	r22, r12
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    12d0:	89 14       	cp	r8, r9
    12d2:	38 f4       	brcc	.+14     	; 0x12e2 <vfprintf+0x384>
    12d4:	b6 01       	movw	r22, r12
    12d6:	80 e3       	ldi	r24, 0x30	; 48
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    12de:	9a 94       	dec	r9
    12e0:	f7 cf       	rjmp	.-18     	; 0x12d0 <vfprintf+0x372>
    12e2:	8a 94       	dec	r8
    12e4:	f3 01       	movw	r30, r6
    12e6:	e8 0d       	add	r30, r8
    12e8:	f1 1d       	adc	r31, r1
    12ea:	80 81       	ld	r24, Z
    12ec:	b6 01       	movw	r22, r12
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    12f4:	81 10       	cpse	r8, r1
    12f6:	f5 cf       	rjmp	.-22     	; 0x12e2 <vfprintf+0x384>
    12f8:	22 20       	and	r2, r2
    12fa:	09 f4       	brne	.+2      	; 0x12fe <vfprintf+0x3a0>
    12fc:	42 ce       	rjmp	.-892    	; 0xf82 <vfprintf+0x24>
    12fe:	b6 01       	movw	r22, r12
    1300:	80 e2       	ldi	r24, 0x20	; 32
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	0e 94 a6 09 	call	0x134c	; 0x134c <fputc>
    1308:	2a 94       	dec	r2
    130a:	f6 cf       	rjmp	.-20     	; 0x12f8 <vfprintf+0x39a>
    130c:	f6 01       	movw	r30, r12
    130e:	86 81       	ldd	r24, Z+6	; 0x06
    1310:	97 81       	ldd	r25, Z+7	; 0x07
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <vfprintf+0x3ba>
    1314:	8f ef       	ldi	r24, 0xFF	; 255
    1316:	9f ef       	ldi	r25, 0xFF	; 255
    1318:	2b 96       	adiw	r28, 0x0b	; 11
    131a:	e2 e1       	ldi	r30, 0x12	; 18
    131c:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__epilogue_restores__>

00001320 <strnlen_P>:
    1320:	fc 01       	movw	r30, r24
    1322:	05 90       	lpm	r0, Z+
    1324:	61 50       	subi	r22, 0x01	; 1
    1326:	70 40       	sbci	r23, 0x00	; 0
    1328:	01 10       	cpse	r0, r1
    132a:	d8 f7       	brcc	.-10     	; 0x1322 <strnlen_P+0x2>
    132c:	80 95       	com	r24
    132e:	90 95       	com	r25
    1330:	8e 0f       	add	r24, r30
    1332:	9f 1f       	adc	r25, r31
    1334:	08 95       	ret

00001336 <strnlen>:
    1336:	fc 01       	movw	r30, r24
    1338:	61 50       	subi	r22, 0x01	; 1
    133a:	70 40       	sbci	r23, 0x00	; 0
    133c:	01 90       	ld	r0, Z+
    133e:	01 10       	cpse	r0, r1
    1340:	d8 f7       	brcc	.-10     	; 0x1338 <strnlen+0x2>
    1342:	80 95       	com	r24
    1344:	90 95       	com	r25
    1346:	8e 0f       	add	r24, r30
    1348:	9f 1f       	adc	r25, r31
    134a:	08 95       	ret

0000134c <fputc>:
    134c:	0f 93       	push	r16
    134e:	1f 93       	push	r17
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	fb 01       	movw	r30, r22
    1356:	23 81       	ldd	r18, Z+3	; 0x03
    1358:	21 fd       	sbrc	r18, 1
    135a:	03 c0       	rjmp	.+6      	; 0x1362 <fputc+0x16>
    135c:	8f ef       	ldi	r24, 0xFF	; 255
    135e:	9f ef       	ldi	r25, 0xFF	; 255
    1360:	2c c0       	rjmp	.+88     	; 0x13ba <fputc+0x6e>
    1362:	22 ff       	sbrs	r18, 2
    1364:	16 c0       	rjmp	.+44     	; 0x1392 <fputc+0x46>
    1366:	46 81       	ldd	r20, Z+6	; 0x06
    1368:	57 81       	ldd	r21, Z+7	; 0x07
    136a:	24 81       	ldd	r18, Z+4	; 0x04
    136c:	35 81       	ldd	r19, Z+5	; 0x05
    136e:	42 17       	cp	r20, r18
    1370:	53 07       	cpc	r21, r19
    1372:	44 f4       	brge	.+16     	; 0x1384 <fputc+0x38>
    1374:	a0 81       	ld	r26, Z
    1376:	b1 81       	ldd	r27, Z+1	; 0x01
    1378:	9d 01       	movw	r18, r26
    137a:	2f 5f       	subi	r18, 0xFF	; 255
    137c:	3f 4f       	sbci	r19, 0xFF	; 255
    137e:	31 83       	std	Z+1, r19	; 0x01
    1380:	20 83       	st	Z, r18
    1382:	8c 93       	st	X, r24
    1384:	26 81       	ldd	r18, Z+6	; 0x06
    1386:	37 81       	ldd	r19, Z+7	; 0x07
    1388:	2f 5f       	subi	r18, 0xFF	; 255
    138a:	3f 4f       	sbci	r19, 0xFF	; 255
    138c:	37 83       	std	Z+7, r19	; 0x07
    138e:	26 83       	std	Z+6, r18	; 0x06
    1390:	14 c0       	rjmp	.+40     	; 0x13ba <fputc+0x6e>
    1392:	8b 01       	movw	r16, r22
    1394:	ec 01       	movw	r28, r24
    1396:	fb 01       	movw	r30, r22
    1398:	00 84       	ldd	r0, Z+8	; 0x08
    139a:	f1 85       	ldd	r31, Z+9	; 0x09
    139c:	e0 2d       	mov	r30, r0
    139e:	09 95       	icall
    13a0:	89 2b       	or	r24, r25
    13a2:	e1 f6       	brne	.-72     	; 0x135c <fputc+0x10>
    13a4:	d8 01       	movw	r26, r16
    13a6:	16 96       	adiw	r26, 0x06	; 6
    13a8:	8d 91       	ld	r24, X+
    13aa:	9c 91       	ld	r25, X
    13ac:	17 97       	sbiw	r26, 0x07	; 7
    13ae:	01 96       	adiw	r24, 0x01	; 1
    13b0:	17 96       	adiw	r26, 0x07	; 7
    13b2:	9c 93       	st	X, r25
    13b4:	8e 93       	st	-X, r24
    13b6:	16 97       	sbiw	r26, 0x06	; 6
    13b8:	ce 01       	movw	r24, r28
    13ba:	df 91       	pop	r29
    13bc:	cf 91       	pop	r28
    13be:	1f 91       	pop	r17
    13c0:	0f 91       	pop	r16
    13c2:	08 95       	ret

000013c4 <__ultoa_invert>:
    13c4:	fa 01       	movw	r30, r20
    13c6:	aa 27       	eor	r26, r26
    13c8:	28 30       	cpi	r18, 0x08	; 8
    13ca:	51 f1       	breq	.+84     	; 0x1420 <__ultoa_invert+0x5c>
    13cc:	20 31       	cpi	r18, 0x10	; 16
    13ce:	81 f1       	breq	.+96     	; 0x1430 <__ultoa_invert+0x6c>
    13d0:	e8 94       	clt
    13d2:	6f 93       	push	r22
    13d4:	6e 7f       	andi	r22, 0xFE	; 254
    13d6:	6e 5f       	subi	r22, 0xFE	; 254
    13d8:	7f 4f       	sbci	r23, 0xFF	; 255
    13da:	8f 4f       	sbci	r24, 0xFF	; 255
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	af 4f       	sbci	r26, 0xFF	; 255
    13e0:	b1 e0       	ldi	r27, 0x01	; 1
    13e2:	3e d0       	rcall	.+124    	; 0x1460 <__ultoa_invert+0x9c>
    13e4:	b4 e0       	ldi	r27, 0x04	; 4
    13e6:	3c d0       	rcall	.+120    	; 0x1460 <__ultoa_invert+0x9c>
    13e8:	67 0f       	add	r22, r23
    13ea:	78 1f       	adc	r23, r24
    13ec:	89 1f       	adc	r24, r25
    13ee:	9a 1f       	adc	r25, r26
    13f0:	a1 1d       	adc	r26, r1
    13f2:	68 0f       	add	r22, r24
    13f4:	79 1f       	adc	r23, r25
    13f6:	8a 1f       	adc	r24, r26
    13f8:	91 1d       	adc	r25, r1
    13fa:	a1 1d       	adc	r26, r1
    13fc:	6a 0f       	add	r22, r26
    13fe:	71 1d       	adc	r23, r1
    1400:	81 1d       	adc	r24, r1
    1402:	91 1d       	adc	r25, r1
    1404:	a1 1d       	adc	r26, r1
    1406:	20 d0       	rcall	.+64     	; 0x1448 <__ultoa_invert+0x84>
    1408:	09 f4       	brne	.+2      	; 0x140c <__ultoa_invert+0x48>
    140a:	68 94       	set
    140c:	3f 91       	pop	r19
    140e:	2a e0       	ldi	r18, 0x0A	; 10
    1410:	26 9f       	mul	r18, r22
    1412:	11 24       	eor	r1, r1
    1414:	30 19       	sub	r19, r0
    1416:	30 5d       	subi	r19, 0xD0	; 208
    1418:	31 93       	st	Z+, r19
    141a:	de f6       	brtc	.-74     	; 0x13d2 <__ultoa_invert+0xe>
    141c:	cf 01       	movw	r24, r30
    141e:	08 95       	ret
    1420:	46 2f       	mov	r20, r22
    1422:	47 70       	andi	r20, 0x07	; 7
    1424:	40 5d       	subi	r20, 0xD0	; 208
    1426:	41 93       	st	Z+, r20
    1428:	b3 e0       	ldi	r27, 0x03	; 3
    142a:	0f d0       	rcall	.+30     	; 0x144a <__ultoa_invert+0x86>
    142c:	c9 f7       	brne	.-14     	; 0x1420 <__ultoa_invert+0x5c>
    142e:	f6 cf       	rjmp	.-20     	; 0x141c <__ultoa_invert+0x58>
    1430:	46 2f       	mov	r20, r22
    1432:	4f 70       	andi	r20, 0x0F	; 15
    1434:	40 5d       	subi	r20, 0xD0	; 208
    1436:	4a 33       	cpi	r20, 0x3A	; 58
    1438:	18 f0       	brcs	.+6      	; 0x1440 <__ultoa_invert+0x7c>
    143a:	49 5d       	subi	r20, 0xD9	; 217
    143c:	31 fd       	sbrc	r19, 1
    143e:	40 52       	subi	r20, 0x20	; 32
    1440:	41 93       	st	Z+, r20
    1442:	02 d0       	rcall	.+4      	; 0x1448 <__ultoa_invert+0x84>
    1444:	a9 f7       	brne	.-22     	; 0x1430 <__ultoa_invert+0x6c>
    1446:	ea cf       	rjmp	.-44     	; 0x141c <__ultoa_invert+0x58>
    1448:	b4 e0       	ldi	r27, 0x04	; 4
    144a:	a6 95       	lsr	r26
    144c:	97 95       	ror	r25
    144e:	87 95       	ror	r24
    1450:	77 95       	ror	r23
    1452:	67 95       	ror	r22
    1454:	ba 95       	dec	r27
    1456:	c9 f7       	brne	.-14     	; 0x144a <__ultoa_invert+0x86>
    1458:	00 97       	sbiw	r24, 0x00	; 0
    145a:	61 05       	cpc	r22, r1
    145c:	71 05       	cpc	r23, r1
    145e:	08 95       	ret
    1460:	9b 01       	movw	r18, r22
    1462:	ac 01       	movw	r20, r24
    1464:	0a 2e       	mov	r0, r26
    1466:	06 94       	lsr	r0
    1468:	57 95       	ror	r21
    146a:	47 95       	ror	r20
    146c:	37 95       	ror	r19
    146e:	27 95       	ror	r18
    1470:	ba 95       	dec	r27
    1472:	c9 f7       	brne	.-14     	; 0x1466 <__ultoa_invert+0xa2>
    1474:	62 0f       	add	r22, r18
    1476:	73 1f       	adc	r23, r19
    1478:	84 1f       	adc	r24, r20
    147a:	95 1f       	adc	r25, r21
    147c:	a0 1d       	adc	r26, r0
    147e:	08 95       	ret

00001480 <__prologue_saves__>:
    1480:	2f 92       	push	r2
    1482:	3f 92       	push	r3
    1484:	4f 92       	push	r4
    1486:	5f 92       	push	r5
    1488:	6f 92       	push	r6
    148a:	7f 92       	push	r7
    148c:	8f 92       	push	r8
    148e:	9f 92       	push	r9
    1490:	af 92       	push	r10
    1492:	bf 92       	push	r11
    1494:	cf 92       	push	r12
    1496:	df 92       	push	r13
    1498:	ef 92       	push	r14
    149a:	ff 92       	push	r15
    149c:	0f 93       	push	r16
    149e:	1f 93       	push	r17
    14a0:	cf 93       	push	r28
    14a2:	df 93       	push	r29
    14a4:	cd b7       	in	r28, 0x3d	; 61
    14a6:	de b7       	in	r29, 0x3e	; 62
    14a8:	ca 1b       	sub	r28, r26
    14aa:	db 0b       	sbc	r29, r27
    14ac:	0f b6       	in	r0, 0x3f	; 63
    14ae:	f8 94       	cli
    14b0:	de bf       	out	0x3e, r29	; 62
    14b2:	0f be       	out	0x3f, r0	; 63
    14b4:	cd bf       	out	0x3d, r28	; 61
    14b6:	09 94       	ijmp

000014b8 <__epilogue_restores__>:
    14b8:	2a 88       	ldd	r2, Y+18	; 0x12
    14ba:	39 88       	ldd	r3, Y+17	; 0x11
    14bc:	48 88       	ldd	r4, Y+16	; 0x10
    14be:	5f 84       	ldd	r5, Y+15	; 0x0f
    14c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    14c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    14c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    14c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    14c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    14ca:	b9 84       	ldd	r11, Y+9	; 0x09
    14cc:	c8 84       	ldd	r12, Y+8	; 0x08
    14ce:	df 80       	ldd	r13, Y+7	; 0x07
    14d0:	ee 80       	ldd	r14, Y+6	; 0x06
    14d2:	fd 80       	ldd	r15, Y+5	; 0x05
    14d4:	0c 81       	ldd	r16, Y+4	; 0x04
    14d6:	1b 81       	ldd	r17, Y+3	; 0x03
    14d8:	aa 81       	ldd	r26, Y+2	; 0x02
    14da:	b9 81       	ldd	r27, Y+1	; 0x01
    14dc:	ce 0f       	add	r28, r30
    14de:	d1 1d       	adc	r29, r1
    14e0:	0f b6       	in	r0, 0x3f	; 63
    14e2:	f8 94       	cli
    14e4:	de bf       	out	0x3e, r29	; 62
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	cd bf       	out	0x3d, r28	; 61
    14ea:	ed 01       	movw	r28, r26
    14ec:	08 95       	ret

000014ee <_exit>:
    14ee:	f8 94       	cli

000014f0 <__stop_program>:
    14f0:	ff cf       	rjmp	.-2      	; 0x14f0 <__stop_program>
